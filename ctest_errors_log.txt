UpdateCTestConfiguration  from :/home/naeper/work/python-cellframe/build/DartConfiguration.tcl
 Add coverage exclude regular expressions.
 Add coverage exclude: .*/tests/.*
 Add coverage exclude: .*/build/.*
 Add coverage exclude: .*/venv_test/.*
 Add coverage exclude: .*/3rdparty/.*
UpdateCTestConfiguration  from :/home/naeper/work/python-cellframe/build/DartConfiguration.tcl
Test project /home/naeper/work/python-cellframe/build
Run command: /usr/bin/cmake -E echo 'Preparing Python Cellframe SDK test environment...'
Preparing Python Cellframe SDK test environment...
Run command: /usr/bin/cmake -E echo 'Project root: /home/naeper/work/python-cellframe'
Project root: /home/naeper/work/python-cellframe
Run command: /usr/bin/cmake -E echo 'Build directory: /home/naeper/work/python-cellframe/build'
Build directory: /home/naeper/work/python-cellframe/build
Constructing a list of tests
Done constructing a list of tests
Updating test list for fixtures
Added 0 tests to meet fixture requirements
Checking test dependency graph...
Checking test dependency graph end
test 1
    Start 1: test_unit

1: Test command: /usr/bin/cmake "-E" "env" "PYTHONPATH=/home/naeper/work/python-cellframe:/home/naeper/work/python-cellframe/build:" "LD_LIBRARY_PATH=/home/naeper/work/python-cellframe/build:/home/naeper/work/python-cellframe/build/dap-sdk-build:/home/naeper/work/python-cellframe/build/cellframe-sdk-embedded:/home/naeper/work/python-cellframe/build/python-dap:/tmp/.mount_CursoryaGM2d/usr/lib/:/tmp/.mount_CursoryaGM2d/usr/lib32/:/tmp/.mount_CursoryaGM2d/usr/lib64/:/tmp/.mount_CursoryaGM2d/lib/:/tmp/.mount_CursoryaGM2d/lib/i386-linux-gnu/:/tmp/.mount_CursoryaGM2d/lib/x86_64-linux-gnu/:/tmp/.mount_CursoryaGM2d/lib/aarch64-linux-gnu/:/tmp/.mount_CursoryaGM2d/lib32/:/tmp/.mount_CursoryaGM2d/lib64/:" "CELLFRAME_TEST_MODE=1" "DAP_SDK_TEST_MODE=1" "/home/naeper/work/python-cellframe/venv_test/bin/python3" "-m" "pytest" "unit/" "-v" "--tb=short"
1: Working Directory: /home/naeper/work/python-cellframe/tests
1: Test timeout computed to be: 600
1: ============================= test session starts ==============================
1: platform linux -- Python 3.11.2, pytest-8.4.1, pluggy-1.6.0 -- /home/naeper/work/python-cellframe/venv_test/bin/python3
1: cachedir: .pytest_cache
1: hypothesis profile 'default'
1: benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
1: rootdir: /home/naeper/work/python-cellframe/tests
1: configfile: pytest.ini
1: plugins: hypothesis-6.137.1, asyncio-1.1.0, xdist-3.8.0, mock-3.14.1, benchmark-5.1.0, cov-6.2.1
1: asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
1: collecting ... collected 55 items / 1 error
1: 
1: ==================================== ERRORS ====================================
1: ________ ERROR collecting unit/composer/test_conditional_processors.py _________
1: ImportError while importing test module '/home/naeper/work/python-cellframe/tests/unit/composer/test_conditional_processors.py'.
1: Hint: make sure your test modules/packages have valid Python names.
1: Traceback:
1: ../CellFrame/core/context.py:23: in <module>
1:     import dap
1: ../python-dap/dap/__init__.py:7: in <module>
1:     from .core.exceptions import DapException, format_exception_context
1: ../python-dap/dap/core/__init__.py:34: in <module>
1:     from .dap import (
1: ../python-dap/dap/core/dap.py:13: in <module>
1:     from ..python_dap import (
1: E   ModuleNotFoundError: No module named 'dap.python_dap'
1: 
1: The above exception was the direct cause of the following exception:
1: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
1:     return _bootstrap._gcd_import(name[level:], package, level)
1:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1: unit/composer/test_conditional_processors.py:8: in <module>
1:     from CellFrame.composer.cond.stake_lock import StakeLockProcessor
1: ../CellFrame/__init__.py:77: in <module>
1:     from .core import (
1: ../CellFrame/core/__init__.py:16: in <module>
1:     from .context import (
1: ../CellFrame/core/context.py:25: in <module>
1:     raise ImportError(
1: E   ImportError: ❌ CRITICAL: Native DAP module not available!
1: E   This is a Python bindings library - fallback implementations are not allowed.
1: E   Required: python-dap must be properly built and installed.
1: E   Original error: No module named 'dap.python_dap'
1: E   Please run: cd python-dap && cmake .. && make && make install
1: =============================== warnings summary ===============================
1: ../CellFrame/legacy/pycfhelpers/__init__.py:50
1:   /home/naeper/work/python-cellframe/CellFrame/legacy/pycfhelpers/__init__.py:50: LegacyWarning: Using legacy pycfhelpers.logger API. Consider migrating to new pythonic API. Use: Python logging module
1:     logger = LegacyLogger()
1: 
1: -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
1: =========================== short test summary info ============================
1: ERROR unit/composer/test_conditional_processors.py
1: !!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
1: ========================= 1 warning, 1 error in 0.36s ==========================
1/4 Test #1: test_unit ........................***Failed    1.26 sec
============================= test session starts ==============================
platform linux -- Python 3.11.2, pytest-8.4.1, pluggy-1.6.0 -- /home/naeper/work/python-cellframe/venv_test/bin/python3
cachedir: .pytest_cache
hypothesis profile 'default'
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/naeper/work/python-cellframe/tests
configfile: pytest.ini
plugins: hypothesis-6.137.1, asyncio-1.1.0, xdist-3.8.0, mock-3.14.1, benchmark-5.1.0, cov-6.2.1
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 55 items / 1 error

==================================== ERRORS ====================================
________ ERROR collecting unit/composer/test_conditional_processors.py _________
ImportError while importing test module '/home/naeper/work/python-cellframe/tests/unit/composer/test_conditional_processors.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
unit/composer/test_conditional_processors.py:8: in <module>
    from CellFrame.composer.cond.stake_lock import StakeLockProcessor
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
=============================== warnings summary ===============================
../CellFrame/legacy/pycfhelpers/__init__.py:50
  /home/naeper/work/python-cellframe/CellFrame/legacy/pycfhelpers/__init__.py:50: LegacyWarning: Using legacy pycfhelpers.logger API. Consider migrating to new pythonic API. Use: Python logging module
    logger = LegacyLogger()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
ERROR unit/composer/test_conditional_processors.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
========================= 1 warning, 1 error in 0.36s ==========================

test 2
    Start 2: test_unit_legacy

2: Test command: /usr/bin/cmake "-E" "env" "PYTHONPATH=/home/naeper/work/python-cellframe:/home/naeper/work/python-cellframe/build:" "LD_LIBRARY_PATH=/home/naeper/work/python-cellframe/build:/home/naeper/work/python-cellframe/build/dap-sdk-build:/home/naeper/work/python-cellframe/build/cellframe-sdk-embedded:/home/naeper/work/python-cellframe/build/python-dap:/tmp/.mount_CursoryaGM2d/usr/lib/:/tmp/.mount_CursoryaGM2d/usr/lib32/:/tmp/.mount_CursoryaGM2d/usr/lib64/:/tmp/.mount_CursoryaGM2d/lib/:/tmp/.mount_CursoryaGM2d/lib/i386-linux-gnu/:/tmp/.mount_CursoryaGM2d/lib/x86_64-linux-gnu/:/tmp/.mount_CursoryaGM2d/lib/aarch64-linux-gnu/:/tmp/.mount_CursoryaGM2d/lib32/:/tmp/.mount_CursoryaGM2d/lib64/:" "CELLFRAME_TEST_MODE=1" "DAP_SDK_TEST_MODE=1" "/home/naeper/work/python-cellframe/venv_test/bin/python3" "-m" "pytest" "unit/legacy/" "-v" "--tb=short"
2: Working Directory: /home/naeper/work/python-cellframe/tests
2: Test timeout computed to be: 600
2: ============================= test session starts ==============================
2: platform linux -- Python 3.11.2, pytest-8.4.1, pluggy-1.6.0 -- /home/naeper/work/python-cellframe/venv_test/bin/python3
2: cachedir: .pytest_cache
2: hypothesis profile 'default'
2: benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
2: rootdir: /home/naeper/work/python-cellframe/tests
2: configfile: pytest.ini
2: plugins: hypothesis-6.137.1, asyncio-1.1.0, xdist-3.8.0, mock-3.14.1, benchmark-5.1.0, cov-6.2.1
2: asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
2: collecting ... collected 13 items
2: 
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_dap_transaction_interface PASSED [  7%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_transaction_creation FAILED [ 15%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_to_new_migration FAILED [ 23%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_conditional_processor_compatibility FAILED [ 30%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_wallet_interface FAILED [ 38%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_chain_interface FAILED [ 46%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_import_paths FAILED [ 53%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_deprecation_warnings FAILED [ 61%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_error_handling FAILED [ 69%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_to_new_data_conversion PASSED [ 76%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_configuration_compatibility FAILED [ 84%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyMigrationGuide::test_transaction_creation_migration FAILED [ 92%]
2: unit/legacy/test_backward_compatibility.py::TestLegacyMigrationGuide::test_conditional_transaction_migration FAILED [100%]
2: 
2: =================================== FAILURES ===================================
2: _______ TestLegacyBackwardCompatibility.test_legacy_transaction_creation _______
2: ../CellFrame/core/context.py:23: in <module>
2:     import dap
2: ../python-dap/dap/__init__.py:7: in <module>
2:     from .core.exceptions import DapException, format_exception_context
2: ../python-dap/dap/core/__init__.py:34: in <module>
2:     from .dap import (
2: ../python-dap/dap/core/dap.py:13: in <module>
2:     from ..python_dap import (
2: E   ModuleNotFoundError: No module named 'dap.python_dap'
2: 
2: The above exception was the direct cause of the following exception:
2: unit/legacy/test_backward_compatibility.py:65: in test_legacy_transaction_creation
2:     with patch('cellframe.legacy.dap_chain_wallet_open'):
2: /usr/lib/python3.11/unittest/mock.py:1421: in __enter__
2:     self.target = self.getter()
2:                   ^^^^^^^^^^^^^
2: /usr/lib/python3.11/pkgutil.py:700: in resolve_name
2:     mod = importlib.import_module(modname)
2:           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
2:     return _bootstrap._gcd_import(name[level:], package, level)
2:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: <frozen importlib._bootstrap>:1206: in _gcd_import
2:     ???
2: <frozen importlib._bootstrap>:1178: in _find_and_load
2:     ???
2: <frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
2:     ???
2: <frozen importlib._bootstrap>:690: in _load_unlocked
2:     ???
2: <frozen importlib._bootstrap_external>:940: in exec_module
2:     ???
2: <frozen importlib._bootstrap>:241: in _call_with_frames_removed
2:     ???
2: ../cellframe.py:7: in <module>
2:     from CellFrame import *
2: ../CellFrame/__init__.py:77: in <module>
2:     from .core import (
2: ../CellFrame/core/__init__.py:16: in <module>
2:     from .context import (
2: ../CellFrame/core/context.py:25: in <module>
2:     raise ImportError(
2: E   ImportError: ❌ CRITICAL: Native DAP module not available!
2: E   This is a Python bindings library - fallback implementations are not allowed.
2: E   Required: python-dap must be properly built and installed.
2: E   Original error: No module named 'dap.python_dap'
2: E   Please run: cd python-dap && cmake .. && make && make install
2: _________ TestLegacyBackwardCompatibility.test_legacy_to_new_migration _________
2: ../CellFrame/core/context.py:23: in <module>
2:     import dap
2: ../python-dap/dap/__init__.py:7: in <module>
2:     from .core.exceptions import DapException, format_exception_context
2: ../python-dap/dap/core/__init__.py:34: in <module>
2:     from .dap import (
2: ../python-dap/dap/core/dap.py:13: in <module>
2:     from ..python_dap import (
2: E   ModuleNotFoundError: No module named 'dap.python_dap'
2: 
2: The above exception was the direct cause of the following exception:
2: unit/legacy/test_backward_compatibility.py:82: in test_legacy_to_new_migration
2:     with patch('CellFrame.legacy.dap_chain_wallet_open'):
2: /usr/lib/python3.11/unittest/mock.py:1421: in __enter__
2:     self.target = self.getter()
2:                   ^^^^^^^^^^^^^
2: /usr/lib/python3.11/pkgutil.py:700: in resolve_name
2:     mod = importlib.import_module(modname)
2:           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
2:     return _bootstrap._gcd_import(name[level:], package, level)
2:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: <frozen importlib._bootstrap>:1206: in _gcd_import
2:     ???
2: <frozen importlib._bootstrap>:1178: in _find_and_load
2:     ???
2: <frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
2:     ???
2: <frozen importlib._bootstrap>:690: in _load_unlocked
2:     ???
2: <frozen importlib._bootstrap_external>:940: in exec_module
2:     ???
2: <frozen importlib._bootstrap>:241: in _call_with_frames_removed
2:     ???
2: ../CellFrame/__init__.py:77: in <module>
2:     from .core import (
2: ../CellFrame/core/__init__.py:16: in <module>
2:     from .context import (
2: ../CellFrame/core/context.py:25: in <module>
2:     raise ImportError(
2: E   ImportError: ❌ CRITICAL: Native DAP module not available!
2: E   This is a Python bindings library - fallback implementations are not allowed.
2: E   Required: python-dap must be properly built and installed.
2: E   Original error: No module named 'dap.python_dap'
2: E   Please run: cd python-dap && cmake .. && make && make install
2: _ TestLegacyBackwardCompatibility.test_legacy_conditional_processor_compatibility _
2: ../CellFrame/core/context.py:23: in <module>
2:     import dap
2: ../python-dap/dap/__init__.py:7: in <module>
2:     from .core.exceptions import DapException, format_exception_context
2: ../python-dap/dap/core/__init__.py:34: in <module>
2:     from .dap import (
2: ../python-dap/dap/core/dap.py:13: in <module>
2:     from ..python_dap import (
2: E   ModuleNotFoundError: No module named 'dap.python_dap'
2: 
2: The above exception was the direct cause of the following exception:
2: unit/legacy/test_backward_compatibility.py:113: in test_legacy_conditional_processor_compatibility
2:     with patch('cellframe.composer.conditional.dap_chain_wallet_open'):
2: /usr/lib/python3.11/unittest/mock.py:1421: in __enter__
2:     self.target = self.getter()
2:                   ^^^^^^^^^^^^^
2: /usr/lib/python3.11/pkgutil.py:700: in resolve_name
2:     mod = importlib.import_module(modname)
2:           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
2:     return _bootstrap._gcd_import(name[level:], package, level)
2:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: <frozen importlib._bootstrap>:1206: in _gcd_import
2:     ???
2: <frozen importlib._bootstrap>:1178: in _find_and_load
2:     ???
2: <frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
2:     ???
2: <frozen importlib._bootstrap>:690: in _load_unlocked
2:     ???
2: <frozen importlib._bootstrap_external>:940: in exec_module
2:     ???
2: <frozen importlib._bootstrap>:241: in _call_with_frames_removed
2:     ???
2: ../cellframe.py:7: in <module>
2:     from CellFrame import *
2: ../CellFrame/__init__.py:77: in <module>
2:     from .core import (
2: ../CellFrame/core/__init__.py:16: in <module>
2:     from .context import (
2: ../CellFrame/core/context.py:25: in <module>
2:     raise ImportError(
2: E   ImportError: ❌ CRITICAL: Native DAP module not available!
2: E   This is a Python bindings library - fallback implementations are not allowed.
2: E   Required: python-dap must be properly built and installed.
2: E   Original error: No module named 'dap.python_dap'
2: E   Please run: cd python-dap && cmake .. && make && make install
2: _________ TestLegacyBackwardCompatibility.test_legacy_wallet_interface _________
2: ../CellFrame/core/context.py:23: in <module>
2:     import dap
2: ../python-dap/dap/__init__.py:7: in <module>
2:     from .core.exceptions import DapException, format_exception_context
2: ../python-dap/dap/core/__init__.py:34: in <module>
2:     from .dap import (
2: ../python-dap/dap/core/dap.py:13: in <module>
2:     from ..python_dap import (
2: E   ModuleNotFoundError: No module named 'dap.python_dap'
2: 
2: The above exception was the direct cause of the following exception:
2: unit/legacy/test_backward_compatibility.py:131: in test_legacy_wallet_interface
2:     with patch('cellframe.legacy.dap_chain_wallet_open'):
2: /usr/lib/python3.11/unittest/mock.py:1421: in __enter__
2:     self.target = self.getter()
2:                   ^^^^^^^^^^^^^
2: /usr/lib/python3.11/pkgutil.py:700: in resolve_name
2:     mod = importlib.import_module(modname)
2:           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
2:     return _bootstrap._gcd_import(name[level:], package, level)
2:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: <frozen importlib._bootstrap>:1206: in _gcd_import
2:     ???
2: <frozen importlib._bootstrap>:1178: in _find_and_load
2:     ???
2: <frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
2:     ???
2: <frozen importlib._bootstrap>:690: in _load_unlocked
2:     ???
2: <frozen importlib._bootstrap_external>:940: in exec_module
2:     ???
2: <frozen importlib._bootstrap>:241: in _call_with_frames_removed
2:     ???
2: ../cellframe.py:7: in <module>
2:     from CellFrame import *
2: ../CellFrame/__init__.py:77: in <module>
2:     from .core import (
2: ../CellFrame/core/__init__.py:16: in <module>
2:     from .context import (
2: ../CellFrame/core/context.py:25: in <module>
2:     raise ImportError(
2: E   ImportError: ❌ CRITICAL: Native DAP module not available!
2: E   This is a Python bindings library - fallback implementations are not allowed.
2: E   Required: python-dap must be properly built and installed.
2: E   Original error: No module named 'dap.python_dap'
2: E   Please run: cd python-dap && cmake .. && make && make install
2: _________ TestLegacyBackwardCompatibility.test_legacy_chain_interface __________
2: ../CellFrame/core/context.py:23: in <module>
2:     import dap
2: ../python-dap/dap/__init__.py:7: in <module>
2:     from .core.exceptions import DapException, format_exception_context
2: ../python-dap/dap/core/__init__.py:34: in <module>
2:     from .dap import (
2: ../python-dap/dap/core/dap.py:13: in <module>
2:     from ..python_dap import (
2: E   ModuleNotFoundError: No module named 'dap.python_dap'
2: 
2: The above exception was the direct cause of the following exception:
2: unit/legacy/test_backward_compatibility.py:148: in test_legacy_chain_interface
2:     with patch('cellframe.legacy.dap_chain_by_name'):
2: /usr/lib/python3.11/unittest/mock.py:1421: in __enter__
2:     self.target = self.getter()
2:                   ^^^^^^^^^^^^^
2: /usr/lib/python3.11/pkgutil.py:700: in resolve_name
2:     mod = importlib.import_module(modname)
2:           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
2:     return _bootstrap._gcd_import(name[level:], package, level)
2:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: <frozen importlib._bootstrap>:1206: in _gcd_import
2:     ???
2: <frozen importlib._bootstrap>:1178: in _find_and_load
2:     ???
2: <frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
2:     ???
2: <frozen importlib._bootstrap>:690: in _load_unlocked
2:     ???
2: <frozen importlib._bootstrap_external>:940: in exec_module
2:     ???
2: <frozen importlib._bootstrap>:241: in _call_with_frames_removed
2:     ???
2: ../cellframe.py:7: in <module>
2:     from CellFrame import *
2: ../CellFrame/__init__.py:77: in <module>
2:     from .core import (
2: ../CellFrame/core/__init__.py:16: in <module>
2:     from .context import (
2: ../CellFrame/core/context.py:25: in <module>
2:     raise ImportError(
2: E   ImportError: ❌ CRITICAL: Native DAP module not available!
2: E   This is a Python bindings library - fallback implementations are not allowed.
2: E   Required: python-dap must be properly built and installed.
2: E   Original error: No module named 'dap.python_dap'
2: E   Please run: cd python-dap && cmake .. && make && make install
2: ___________ TestLegacyBackwardCompatibility.test_legacy_import_paths ___________
2: unit/legacy/test_backward_compatibility.py:180: in test_legacy_import_paths
2:     assert import_success, f"Legacy import failed: {import_test}"
2: E   AssertionError: Legacy import failed: from cellframe.legacy import DapTransaction
2: E   assert False
2: _______ TestLegacyBackwardCompatibility.test_legacy_deprecation_warnings _______
2: ../CellFrame/core/context.py:23: in <module>
2:     import dap
2: ../python-dap/dap/__init__.py:7: in <module>
2:     from .core.exceptions import DapException, format_exception_context
2: ../python-dap/dap/core/__init__.py:34: in <module>
2:     from .dap import (
2: ../python-dap/dap/core/dap.py:13: in <module>
2:     from ..python_dap import (
2: E   ModuleNotFoundError: No module named 'dap.python_dap'
2: 
2: The above exception was the direct cause of the following exception:
2: unit/legacy/test_backward_compatibility.py:190: in test_legacy_deprecation_warnings
2:     with patch('cellframe.legacy.dap_chain_wallet_open'):
2: /usr/lib/python3.11/unittest/mock.py:1421: in __enter__
2:     self.target = self.getter()
2:                   ^^^^^^^^^^^^^
2: /usr/lib/python3.11/pkgutil.py:700: in resolve_name
2:     mod = importlib.import_module(modname)
2:           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
2:     return _bootstrap._gcd_import(name[level:], package, level)
2:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: <frozen importlib._bootstrap>:1206: in _gcd_import
2:     ???
2: <frozen importlib._bootstrap>:1178: in _find_and_load
2:     ???
2: <frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
2:     ???
2: <frozen importlib._bootstrap>:690: in _load_unlocked
2:     ???
2: <frozen importlib._bootstrap_external>:940: in exec_module
2:     ???
2: <frozen importlib._bootstrap>:241: in _call_with_frames_removed
2:     ???
2: ../cellframe.py:7: in <module>
2:     from CellFrame import *
2: ../CellFrame/__init__.py:77: in <module>
2:     from .core import (
2: ../CellFrame/core/__init__.py:16: in <module>
2:     from .context import (
2: ../CellFrame/core/context.py:25: in <module>
2:     raise ImportError(
2: E   ImportError: ❌ CRITICAL: Native DAP module not available!
2: E   This is a Python bindings library - fallback implementations are not allowed.
2: E   Required: python-dap must be properly built and installed.
2: E   Original error: No module named 'dap.python_dap'
2: E   Please run: cd python-dap && cmake .. && make && make install
2: __________ TestLegacyBackwardCompatibility.test_legacy_error_handling __________
2: ../CellFrame/core/context.py:23: in <module>
2:     import dap
2: ../python-dap/dap/__init__.py:7: in <module>
2:     from .core.exceptions import DapException, format_exception_context
2: ../python-dap/dap/core/__init__.py:34: in <module>
2:     from .dap import (
2: ../python-dap/dap/core/dap.py:13: in <module>
2:     from ..python_dap import (
2: E   ModuleNotFoundError: No module named 'dap.python_dap'
2: 
2: The above exception was the direct cause of the following exception:
2: unit/legacy/test_backward_compatibility.py:206: in test_legacy_error_handling
2:     with patch('cellframe.legacy.dap_chain_wallet_open', side_effect=Exception("Legacy error")):
2: /usr/lib/python3.11/unittest/mock.py:1421: in __enter__
2:     self.target = self.getter()
2:                   ^^^^^^^^^^^^^
2: /usr/lib/python3.11/pkgutil.py:700: in resolve_name
2:     mod = importlib.import_module(modname)
2:           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
2:     return _bootstrap._gcd_import(name[level:], package, level)
2:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: <frozen importlib._bootstrap>:1206: in _gcd_import
2:     ???
2: <frozen importlib._bootstrap>:1178: in _find_and_load
2:     ???
2: <frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
2:     ???
2: <frozen importlib._bootstrap>:690: in _load_unlocked
2:     ???
2: <frozen importlib._bootstrap_external>:940: in exec_module
2:     ???
2: <frozen importlib._bootstrap>:241: in _call_with_frames_removed
2:     ???
2: ../cellframe.py:7: in <module>
2:     from CellFrame import *
2: ../CellFrame/__init__.py:77: in <module>
2:     from .core import (
2: ../CellFrame/core/__init__.py:16: in <module>
2:     from .context import (
2: ../CellFrame/core/context.py:25: in <module>
2:     raise ImportError(
2: E   ImportError: ❌ CRITICAL: Native DAP module not available!
2: E   This is a Python bindings library - fallback implementations are not allowed.
2: E   Required: python-dap must be properly built and installed.
2: E   Original error: No module named 'dap.python_dap'
2: E   Please run: cd python-dap && cmake .. && make && make install
2: ___ TestLegacyBackwardCompatibility.test_legacy_configuration_compatibility ____
2: ../CellFrame/core/context.py:23: in <module>
2:     import dap
2: ../python-dap/dap/__init__.py:7: in <module>
2:     from .core.exceptions import DapException, format_exception_context
2: ../python-dap/dap/core/__init__.py:34: in <module>
2:     from .dap import (
2: ../python-dap/dap/core/dap.py:13: in <module>
2:     from ..python_dap import (
2: E   ModuleNotFoundError: No module named 'dap.python_dap'
2: 
2: The above exception was the direct cause of the following exception:
2: unit/legacy/test_backward_compatibility.py:251: in test_legacy_configuration_compatibility
2:     with patch('cellframe.composer.core.dap_chain_wallet_open'):
2: /usr/lib/python3.11/unittest/mock.py:1421: in __enter__
2:     self.target = self.getter()
2:                   ^^^^^^^^^^^^^
2: /usr/lib/python3.11/pkgutil.py:700: in resolve_name
2:     mod = importlib.import_module(modname)
2:           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
2:     return _bootstrap._gcd_import(name[level:], package, level)
2:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: <frozen importlib._bootstrap>:1206: in _gcd_import
2:     ???
2: <frozen importlib._bootstrap>:1178: in _find_and_load
2:     ???
2: <frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
2:     ???
2: <frozen importlib._bootstrap>:690: in _load_unlocked
2:     ???
2: <frozen importlib._bootstrap_external>:940: in exec_module
2:     ???
2: <frozen importlib._bootstrap>:241: in _call_with_frames_removed
2:     ???
2: ../cellframe.py:7: in <module>
2:     from CellFrame import *
2: ../CellFrame/__init__.py:77: in <module>
2:     from .core import (
2: ../CellFrame/core/__init__.py:16: in <module>
2:     from .context import (
2: ../CellFrame/core/context.py:25: in <module>
2:     raise ImportError(
2: E   ImportError: ❌ CRITICAL: Native DAP module not available!
2: E   This is a Python bindings library - fallback implementations are not allowed.
2: E   Required: python-dap must be properly built and installed.
2: E   Original error: No module named 'dap.python_dap'
2: E   Please run: cd python-dap && cmake .. && make && make install
2: _________ TestLegacyMigrationGuide.test_transaction_creation_migration _________
2: ../CellFrame/core/context.py:23: in <module>
2:     import dap
2: ../python-dap/dap/__init__.py:7: in <module>
2:     from .core.exceptions import DapException, format_exception_context
2: ../python-dap/dap/core/__init__.py:34: in <module>
2:     from .dap import (
2: ../python-dap/dap/core/dap.py:13: in <module>
2:     from ..python_dap import (
2: E   ModuleNotFoundError: No module named 'dap.python_dap'
2: 
2: The above exception was the direct cause of the following exception:
2: unit/legacy/test_backward_compatibility.py:272: in test_transaction_creation_migration
2:     with patch('cellframe.legacy.dap_chain_wallet_open'), \
2: /usr/lib/python3.11/unittest/mock.py:1421: in __enter__
2:     self.target = self.getter()
2:                   ^^^^^^^^^^^^^
2: /usr/lib/python3.11/pkgutil.py:700: in resolve_name
2:     mod = importlib.import_module(modname)
2:           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
2:     return _bootstrap._gcd_import(name[level:], package, level)
2:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: <frozen importlib._bootstrap>:1206: in _gcd_import
2:     ???
2: <frozen importlib._bootstrap>:1178: in _find_and_load
2:     ???
2: <frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
2:     ???
2: <frozen importlib._bootstrap>:690: in _load_unlocked
2:     ???
2: <frozen importlib._bootstrap_external>:940: in exec_module
2:     ???
2: <frozen importlib._bootstrap>:241: in _call_with_frames_removed
2:     ???
2: ../cellframe.py:7: in <module>
2:     from CellFrame import *
2: ../CellFrame/__init__.py:77: in <module>
2:     from .core import (
2: ../CellFrame/core/__init__.py:16: in <module>
2:     from .context import (
2: ../CellFrame/core/context.py:25: in <module>
2:     raise ImportError(
2: E   ImportError: ❌ CRITICAL: Native DAP module not available!
2: E   This is a Python bindings library - fallback implementations are not allowed.
2: E   Required: python-dap must be properly built and installed.
2: E   Original error: No module named 'dap.python_dap'
2: E   Please run: cd python-dap && cmake .. && make && make install
2: _______ TestLegacyMigrationGuide.test_conditional_transaction_migration ________
2: ../CellFrame/core/context.py:23: in <module>
2:     import dap
2: ../python-dap/dap/__init__.py:7: in <module>
2:     from .core.exceptions import DapException, format_exception_context
2: ../python-dap/dap/core/__init__.py:34: in <module>
2:     from .dap import (
2: ../python-dap/dap/core/dap.py:13: in <module>
2:     from ..python_dap import (
2: E   ModuleNotFoundError: No module named 'dap.python_dap'
2: 
2: The above exception was the direct cause of the following exception:
2: unit/legacy/test_backward_compatibility.py:311: in test_conditional_transaction_migration
2:     with patch('cellframe.composer.conditional.dap_chain_wallet_open'), \
2: /usr/lib/python3.11/unittest/mock.py:1421: in __enter__
2:     self.target = self.getter()
2:                   ^^^^^^^^^^^^^
2: /usr/lib/python3.11/pkgutil.py:700: in resolve_name
2:     mod = importlib.import_module(modname)
2:           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
2:     return _bootstrap._gcd_import(name[level:], package, level)
2:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2: <frozen importlib._bootstrap>:1206: in _gcd_import
2:     ???
2: <frozen importlib._bootstrap>:1178: in _find_and_load
2:     ???
2: <frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
2:     ???
2: <frozen importlib._bootstrap>:690: in _load_unlocked
2:     ???
2: <frozen importlib._bootstrap_external>:940: in exec_module
2:     ???
2: <frozen importlib._bootstrap>:241: in _call_with_frames_removed
2:     ???
2: ../cellframe.py:7: in <module>
2:     from CellFrame import *
2: ../CellFrame/__init__.py:77: in <module>
2:     from .core import (
2: ../CellFrame/core/__init__.py:16: in <module>
2:     from .context import (
2: ../CellFrame/core/context.py:25: in <module>
2:     raise ImportError(
2: E   ImportError: ❌ CRITICAL: Native DAP module not available!
2: E   This is a Python bindings library - fallback implementations are not allowed.
2: E   Required: python-dap must be properly built and installed.
2: E   Original error: No module named 'dap.python_dap'
2: E   Please run: cd python-dap && cmake .. && make && make install
2: =========================== short test summary info ============================
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_transaction_creation
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_to_new_migration
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_conditional_processor_compatibility
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_wallet_interface
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_chain_interface
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_import_paths
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_deprecation_warnings
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_error_handling
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_configuration_compatibility
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyMigrationGuide::test_transaction_creation_migration
2: FAILED unit/legacy/test_backward_compatibility.py::TestLegacyMigrationGuide::test_conditional_transaction_migration
2: ========================= 11 failed, 2 passed in 1.06s =========================
2/4 Test #2: test_unit_legacy .................***Failed    1.56 sec
============================= test session starts ==============================
platform linux -- Python 3.11.2, pytest-8.4.1, pluggy-1.6.0 -- /home/naeper/work/python-cellframe/venv_test/bin/python3
cachedir: .pytest_cache
hypothesis profile 'default'
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/naeper/work/python-cellframe/tests
configfile: pytest.ini
plugins: hypothesis-6.137.1, asyncio-1.1.0, xdist-3.8.0, mock-3.14.1, benchmark-5.1.0, cov-6.2.1
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 13 items

unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_dap_transaction_interface PASSED [  7%]
unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_transaction_creation FAILED [ 15%]
unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_to_new_migration FAILED [ 23%]
unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_conditional_processor_compatibility FAILED [ 30%]
unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_wallet_interface FAILED [ 38%]
unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_chain_interface FAILED [ 46%]
unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_import_paths FAILED [ 53%]
unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_deprecation_warnings FAILED [ 61%]
unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_error_handling FAILED [ 69%]
unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_to_new_data_conversion PASSED [ 76%]
unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_configuration_compatibility FAILED [ 84%]
unit/legacy/test_backward_compatibility.py::TestLegacyMigrationGuide::test_transaction_creation_migration FAILED [ 92%]
unit/legacy/test_backward_compatibility.py::TestLegacyMigrationGuide::test_conditional_transaction_migration FAILED [100%]

=================================== FAILURES ===================================
_______ TestLegacyBackwardCompatibility.test_legacy_transaction_creation _______
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
unit/legacy/test_backward_compatibility.py:65: in test_legacy_transaction_creation
    with patch('cellframe.legacy.dap_chain_wallet_open'):
/usr/lib/python3.11/unittest/mock.py:1421: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/usr/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1206: in _gcd_import
    ???
<frozen importlib._bootstrap>:1178: in _find_and_load
    ???
<frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
../cellframe.py:7: in <module>
    from CellFrame import *
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
_________ TestLegacyBackwardCompatibility.test_legacy_to_new_migration _________
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
unit/legacy/test_backward_compatibility.py:82: in test_legacy_to_new_migration
    with patch('CellFrame.legacy.dap_chain_wallet_open'):
/usr/lib/python3.11/unittest/mock.py:1421: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/usr/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1206: in _gcd_import
    ???
<frozen importlib._bootstrap>:1178: in _find_and_load
    ???
<frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
_ TestLegacyBackwardCompatibility.test_legacy_conditional_processor_compatibility _
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
unit/legacy/test_backward_compatibility.py:113: in test_legacy_conditional_processor_compatibility
    with patch('cellframe.composer.conditional.dap_chain_wallet_open'):
/usr/lib/python3.11/unittest/mock.py:1421: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/usr/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1206: in _gcd_import
    ???
<frozen importlib._bootstrap>:1178: in _find_and_load
    ???
<frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
../cellframe.py:7: in <module>
    from CellFrame import *
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
_________ TestLegacyBackwardCompatibility.test_legacy_wallet_interface _________
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
unit/legacy/test_backward_compatibility.py:131: in test_legacy_wallet_interface
    with patch('cellframe.legacy.dap_chain_wallet_open'):
/usr/lib/python3.11/unittest/mock.py:1421: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/usr/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1206: in _gcd_import
    ???
<frozen importlib._bootstrap>:1178: in _find_and_load
    ???
<frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
../cellframe.py:7: in <module>
    from CellFrame import *
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
_________ TestLegacyBackwardCompatibility.test_legacy_chain_interface __________
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
unit/legacy/test_backward_compatibility.py:148: in test_legacy_chain_interface
    with patch('cellframe.legacy.dap_chain_by_name'):
/usr/lib/python3.11/unittest/mock.py:1421: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/usr/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1206: in _gcd_import
    ???
<frozen importlib._bootstrap>:1178: in _find_and_load
    ???
<frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
../cellframe.py:7: in <module>
    from CellFrame import *
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
___________ TestLegacyBackwardCompatibility.test_legacy_import_paths ___________
unit/legacy/test_backward_compatibility.py:180: in test_legacy_import_paths
    assert import_success, f"Legacy import failed: {import_test}"
E   AssertionError: Legacy import failed: from cellframe.legacy import DapTransaction
E   assert False
_______ TestLegacyBackwardCompatibility.test_legacy_deprecation_warnings _______
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
unit/legacy/test_backward_compatibility.py:190: in test_legacy_deprecation_warnings
    with patch('cellframe.legacy.dap_chain_wallet_open'):
/usr/lib/python3.11/unittest/mock.py:1421: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/usr/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1206: in _gcd_import
    ???
<frozen importlib._bootstrap>:1178: in _find_and_load
    ???
<frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
../cellframe.py:7: in <module>
    from CellFrame import *
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
__________ TestLegacyBackwardCompatibility.test_legacy_error_handling __________
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
unit/legacy/test_backward_compatibility.py:206: in test_legacy_error_handling
    with patch('cellframe.legacy.dap_chain_wallet_open', side_effect=Exception("Legacy error")):
/usr/lib/python3.11/unittest/mock.py:1421: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/usr/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1206: in _gcd_import
    ???
<frozen importlib._bootstrap>:1178: in _find_and_load
    ???
<frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
../cellframe.py:7: in <module>
    from CellFrame import *
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
___ TestLegacyBackwardCompatibility.test_legacy_configuration_compatibility ____
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
unit/legacy/test_backward_compatibility.py:251: in test_legacy_configuration_compatibility
    with patch('cellframe.composer.core.dap_chain_wallet_open'):
/usr/lib/python3.11/unittest/mock.py:1421: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/usr/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1206: in _gcd_import
    ???
<frozen importlib._bootstrap>:1178: in _find_and_load
    ???
<frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
../cellframe.py:7: in <module>
    from CellFrame import *
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
_________ TestLegacyMigrationGuide.test_transaction_creation_migration _________
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
unit/legacy/test_backward_compatibility.py:272: in test_transaction_creation_migration
    with patch('cellframe.legacy.dap_chain_wallet_open'), \
/usr/lib/python3.11/unittest/mock.py:1421: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/usr/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1206: in _gcd_import
    ???
<frozen importlib._bootstrap>:1178: in _find_and_load
    ???
<frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
../cellframe.py:7: in <module>
    from CellFrame import *
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
_______ TestLegacyMigrationGuide.test_conditional_transaction_migration ________
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
unit/legacy/test_backward_compatibility.py:311: in test_conditional_transaction_migration
    with patch('cellframe.composer.conditional.dap_chain_wallet_open'), \
/usr/lib/python3.11/unittest/mock.py:1421: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/usr/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1206: in _gcd_import
    ???
<frozen importlib._bootstrap>:1178: in _find_and_load
    ???
<frozen importlib._bootstrap>:1149: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
../cellframe.py:7: in <module>
    from CellFrame import *
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
=========================== short test summary info ============================
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_transaction_creation
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_to_new_migration
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_conditional_processor_compatibility
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_wallet_interface
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_chain_interface
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_import_paths
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_deprecation_warnings
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_error_handling
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyBackwardCompatibility::test_legacy_configuration_compatibility
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyMigrationGuide::test_transaction_creation_migration
FAILED unit/legacy/test_backward_compatibility.py::TestLegacyMigrationGuide::test_conditional_transaction_migration
========================= 11 failed, 2 passed in 1.06s =========================

test 3
    Start 3: test_unit_composer

3: Test command: /usr/bin/cmake "-E" "env" "PYTHONPATH=/home/naeper/work/python-cellframe:/home/naeper/work/python-cellframe/build:" "LD_LIBRARY_PATH=/home/naeper/work/python-cellframe/build:/home/naeper/work/python-cellframe/build/dap-sdk-build:/home/naeper/work/python-cellframe/build/cellframe-sdk-embedded:/home/naeper/work/python-cellframe/build/python-dap:/tmp/.mount_CursoryaGM2d/usr/lib/:/tmp/.mount_CursoryaGM2d/usr/lib32/:/tmp/.mount_CursoryaGM2d/usr/lib64/:/tmp/.mount_CursoryaGM2d/lib/:/tmp/.mount_CursoryaGM2d/lib/i386-linux-gnu/:/tmp/.mount_CursoryaGM2d/lib/x86_64-linux-gnu/:/tmp/.mount_CursoryaGM2d/lib/aarch64-linux-gnu/:/tmp/.mount_CursoryaGM2d/lib32/:/tmp/.mount_CursoryaGM2d/lib64/:" "CELLFRAME_TEST_MODE=1" "DAP_SDK_TEST_MODE=1" "/home/naeper/work/python-cellframe/venv_test/bin/python3" "-m" "pytest" "unit/composer/" "-v" "--tb=short"
3: Working Directory: /home/naeper/work/python-cellframe/tests
3: Test timeout computed to be: 600
3: ============================= test session starts ==============================
3: platform linux -- Python 3.11.2, pytest-8.4.1, pluggy-1.6.0 -- /home/naeper/work/python-cellframe/venv_test/bin/python3
3: cachedir: .pytest_cache
3: hypothesis profile 'default'
3: benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
3: rootdir: /home/naeper/work/python-cellframe/tests
3: configfile: pytest.ini
3: plugins: hypothesis-6.137.1, asyncio-1.1.0, xdist-3.8.0, mock-3.14.1, benchmark-5.1.0, cov-6.2.1
3: asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
3: collecting ... collected 16 items / 1 error
3: 
3: ==================================== ERRORS ====================================
3: ________ ERROR collecting unit/composer/test_conditional_processors.py _________
3: ImportError while importing test module '/home/naeper/work/python-cellframe/tests/unit/composer/test_conditional_processors.py'.
3: Hint: make sure your test modules/packages have valid Python names.
3: Traceback:
3: ../CellFrame/core/context.py:23: in <module>
3:     import dap
3: ../python-dap/dap/__init__.py:7: in <module>
3:     from .core.exceptions import DapException, format_exception_context
3: ../python-dap/dap/core/__init__.py:34: in <module>
3:     from .dap import (
3: ../python-dap/dap/core/dap.py:13: in <module>
3:     from ..python_dap import (
3: E   ModuleNotFoundError: No module named 'dap.python_dap'
3: 
3: The above exception was the direct cause of the following exception:
3: /usr/lib/python3.11/importlib/__init__.py:126: in import_module
3:     return _bootstrap._gcd_import(name[level:], package, level)
3:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3: unit/composer/test_conditional_processors.py:8: in <module>
3:     from CellFrame.composer.cond.stake_lock import StakeLockProcessor
3: ../CellFrame/__init__.py:77: in <module>
3:     from .core import (
3: ../CellFrame/core/__init__.py:16: in <module>
3:     from .context import (
3: ../CellFrame/core/context.py:25: in <module>
3:     raise ImportError(
3: E   ImportError: ❌ CRITICAL: Native DAP module not available!
3: E   This is a Python bindings library - fallback implementations are not allowed.
3: E   Required: python-dap must be properly built and installed.
3: E   Original error: No module named 'dap.python_dap'
3: E   Please run: cd python-dap && cmake .. && make && make install
3: =============================== warnings summary ===============================
3: ../CellFrame/legacy/pycfhelpers/__init__.py:50
3:   /home/naeper/work/python-cellframe/CellFrame/legacy/pycfhelpers/__init__.py:50: LegacyWarning: Using legacy pycfhelpers.logger API. Consider migrating to new pythonic API. Use: Python logging module
3:     logger = LegacyLogger()
3: 
3: -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
3: =========================== short test summary info ============================
3: ERROR unit/composer/test_conditional_processors.py
3: !!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
3: ========================= 1 warning, 1 error in 0.34s ==========================
3/4 Test #3: test_unit_composer ...............***Failed    1.09 sec
============================= test session starts ==============================
platform linux -- Python 3.11.2, pytest-8.4.1, pluggy-1.6.0 -- /home/naeper/work/python-cellframe/venv_test/bin/python3
cachedir: .pytest_cache
hypothesis profile 'default'
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/naeper/work/python-cellframe/tests
configfile: pytest.ini
plugins: hypothesis-6.137.1, asyncio-1.1.0, xdist-3.8.0, mock-3.14.1, benchmark-5.1.0, cov-6.2.1
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 16 items / 1 error

==================================== ERRORS ====================================
________ ERROR collecting unit/composer/test_conditional_processors.py _________
ImportError while importing test module '/home/naeper/work/python-cellframe/tests/unit/composer/test_conditional_processors.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
../CellFrame/core/context.py:23: in <module>
    import dap
../python-dap/dap/__init__.py:7: in <module>
    from .core.exceptions import DapException, format_exception_context
../python-dap/dap/core/__init__.py:34: in <module>
    from .dap import (
../python-dap/dap/core/dap.py:13: in <module>
    from ..python_dap import (
E   ModuleNotFoundError: No module named 'dap.python_dap'

The above exception was the direct cause of the following exception:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
unit/composer/test_conditional_processors.py:8: in <module>
    from CellFrame.composer.cond.stake_lock import StakeLockProcessor
../CellFrame/__init__.py:77: in <module>
    from .core import (
../CellFrame/core/__init__.py:16: in <module>
    from .context import (
../CellFrame/core/context.py:25: in <module>
    raise ImportError(
E   ImportError: ❌ CRITICAL: Native DAP module not available!
E   This is a Python bindings library - fallback implementations are not allowed.
E   Required: python-dap must be properly built and installed.
E   Original error: No module named 'dap.python_dap'
E   Please run: cd python-dap && cmake .. && make && make install
=============================== warnings summary ===============================
../CellFrame/legacy/pycfhelpers/__init__.py:50
  /home/naeper/work/python-cellframe/CellFrame/legacy/pycfhelpers/__init__.py:50: LegacyWarning: Using legacy pycfhelpers.logger API. Consider migrating to new pythonic API. Use: Python logging module
    logger = LegacyLogger()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
ERROR unit/composer/test_conditional_processors.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
========================= 1 warning, 1 error in 0.34s ==========================

test 4
    Start 4: test_quick_functionality

4: Test command: /usr/bin/cmake "-E" "env" "PYTHONPATH=/home/naeper/work/python-cellframe:" "CELLFRAME_TEST_MODE=1" "/home/naeper/work/python-cellframe/quick_test.sh"
4: Working Directory: /home/naeper/work/python-cellframe
4: Test timeout computed to be: 120
4: /home/naeper/work/python-cellframe/quick_test.sh: строка 7: /home/naeper/work/python-cellframe/venv_test/bin/activate_test: Нет такого файла или каталога
4: 🔬 Quick functionality test...
4: DEBUG: PyInit_python_dap started
4: DEBUG: About to call ensure_dap_sdk_initialized()
4: Can't open log file /var/log/dap.log 
4: DEBUG: ensure_dap_sdk_initialized() succeeded
4: DEBUG: About to call concatenate_methods()
4: DEBUG: concatenate_methods started
4: DEBUG: crypto_methods returned: 0x7efed94fdc20
4: DEBUG: first crypto method: py_dap_crypto_key_create
4: DEBUG: About to call py_dap_plugin_get_methods
4: DEBUG: Test environment detected, using: /tmp/dap_test_118504
4: DEBUG: Starting DAP SDK initialization with params:
4:   App name: dap
4:   Working dir: /tmp/dap_test_118504
4:   Config dir: /etc
4:   Temp dir: /tmp
4:   Log file: /var/log/dap.log
4:   Events threads: 1
4:   Debug mode: false
4: DEBUG: Creating directories...
4: DEBUG: Calling dap_common_init...
4: DEBUG: dap_common_init returned: -1
4: WARNING: dap_common_init failed with code -1 (possibly logging issue)
4: WARNING: Continuing with reduced functionality for testing...
4: DEBUG: Calling dap_config_init with dir: /etc
4: DEBUG: dap_config_init returned: 0
4: DEBUG: Calling dap_events_init with 1 threads, 10000 timeout...
4: DEBUG: dap_events_init returned: 0
4: DEBUG: Calling dap_events_start...
4: DEBUG: dap_events_start completed
4: DEBUG: Calling dap_client_init...
4: DEBUG: dap_client_init returned: 0
4: DEBUG: DAP SDK initialization completed successfully!
4: DEBUG: py_dap_plugin_get_methods called
4: DEBUG: plugin_api_methods address = 0x7efed94fd940
4: DEBUG: first method name = dap_sdk_init
4: DEBUG: py_dap_plugin_get_methods returned 0x7efed94fd940
4: DEBUG: first plugin method name = 'dap_sdk_init'
4: DEBUG: common_methods has 2 methods
4: DEBUG: config_methods has 13 methods
4: DEBUG: crypto_methods has 30 methods
4: DEBUG: system_methods has 10 methods
4: DEBUG: logging_methods has 8 methods
4: DEBUG: time_methods has 3 methods
4: DEBUG: server_methods has 13 methods
4: DEBUG: client_methods has 6 methods
4: DEBUG: events_methods has 10 methods
4: DEBUG: network_methods has 6 methods
4: DEBUG: stream_methods has 31 methods
4: DEBUG: http_methods has 26 methods
4: DEBUG: plugin_methods has 2 methods
4: DEBUG: Total methods count: 160
4: DEBUG: copying 2 methods from common_methods at index 0
4: DEBUG: copying 13 methods from config_methods at index 2
4: DEBUG: copying 30 methods from crypto_methods at index 15
4: DEBUG: copying 10 methods from system_methods at index 45
4: DEBUG: copying 8 methods from logging_methods at index 55
4: DEBUG: copying 3 methods from time_methods at index 63
4: DEBUG: copying 13 methods from server_methods at index 66
4: DEBUG: copying 6 methods from client_methods at index 79
4: DEBUG: copying 10 methods from events_methods at index 85
4: DEBUG: copying 6 methods from network_methods at index 95
4: DEBUG: copying 31 methods from stream_methods at index 101
4: DEBUG: copying 26 methods from http_methods at index 132
4: DEBUG: copying 2 methods from plugin_methods at index 158
4: DEBUG: concatenate_methods completed, returning 0x1a9ec090 with 160 methods
4: DEBUG: concatenate_methods() returned 0x1a9ec090
4: DEBUG: concatenate_methods() succeeded
4: DEBUG: About to call PyModule_Create
4: DEBUG: PyModule_Create succeeded
4: DEBUG: Calling module init functions
4: DEBUG: PyInit_python_dap completed successfully
4: WARNING:cellframe.library:Failed to initialize DAP: module 'dap' has no attribute 'Dap'
4: 2025-08-12 21:54:16,374 - cellframe.library - INFO - Library context initialized successfully
4: INFO:cellframe.library:Library context initialized successfully
4: ✅ CellframeNode import successful
4: ✅ CellframeNode creation successful
4: 🎉 Basic functionality check passed!
4/4 Test #4: test_quick_functionality .........   Passed    0.14 sec

25% tests passed, 3 tests failed out of 4

Total Test time (real) =   4.05 sec

The following tests FAILED:
	  1 - test_unit (Failed)
	  2 - test_unit_legacy (Failed)
	  3 - test_unit_composer (Failed)
Run command:  -E echo '✅ Python Cellframe SDK tests completed'
No such file or directory
Problem running command:  -E echo '✅ Python Cellframe SDK tests completed'
Problem executing post-test command(s).
Errors while running CTest
