Search.setIndex({"docnames": ["index", "modules", "pycfhelpers", "pycfhelpers.common", "pycfhelpers.node", "pycfhelpers.node.http"], "filenames": ["index.rst", "modules.rst", "pycfhelpers.rst", "pycfhelpers.common.rst", "pycfhelpers.node.rst", "pycfhelpers.node.http.rst"], "titles": ["Welcome to test\u2019s documentation!", "pycfhelpers", "pycfhelpers package", "pycfhelpers.common package", "pycfhelpers.node package", "pycfhelpers.node.http package"], "terms": {"pycfhelp": 0, "packag": [0, 1], "subpackag": [0, 1], "submodul": [0, 1], "contract": [0, 1, 4], "modul": [0, 1], "globaldb": [0, 1, 4], "helper": [0, 1], "logger": [0, 1, 4], "tornado_http": [0, 1], "index": [0, 2, 3, 4], "search": [0, 2], "page": 0, "content": 1, "common": [2, 4], "parser": [2, 4], "parse_cf_v1_address": [2, 3], "type": [2, 5], "chaintyp": [2, 3, 4], "esboc": [2, 3, 4], "dag_poa": [2, 3, 4], "_generate_next_value_": [2, 3, 4], "datumtyp": [2, 3], "datum_tx": [2, 3], "datum_token_decl": [2, 3], "datum_token_emiss": [2, 3], "datum_custom": [2, 3], "datum_decre": [2, 3], "datum_anchor": [2, 3], "itemtyp": [2, 3, 4], "tx_item_type_in": [2, 3], "tx_item_type_in_cond": [2, 3], "tx_item_type_out": [2, 3], "tx_item_type_out_cond": [2, 3], "tx_item_type_pkei": [2, 3], "tx_item_type_sig": [2, 3], "tx_item_type_in_em": [2, 3], "tx_item_type_receipt": [2, 3], "tx_item_type_out_ext": [2, 3], "tx_item_type_tsd": [2, 3], "tx_item_type_vot": [2, 3], "dap_chain_tx_out_cond_subtype_srv_pai": [2, 3], "dap_chain_tx_out_cond_subtype_srv_stake_lock": [2, 3], "dap_chain_tx_out_cond_subtype_srv_xchang": [2, 3], "dap_chain_tx_out_cond_subtype_srv_stake_pos_deleg": [2, 3], "node": 2, "http": [2, 4], "simpl": [2, 4], "address": [2, 3, 5], "cfwalletaddress": [2, 4], "_original_addr": [2, 4], "net_id": [2, 3, 4], "cli": 2, "cfclicommand": [2, 4], "command": [2, 4], "callback": [2, 4], "help_text": [2, 4], "regist": [2, 4, 5], "clicallback": [2, 4], "__call__": [2, 4, 5], "replyobject": [2, 4], "reply_id": [2, 4], "repli": [2, 4], "consensu": 2, "cfblock": [2, 4], "chain": [2, 3, 4], "hash": [2, 3, 4], "created_at": [2, 4], "version": [2, 3, 4], "cell_id": [2, 4], "chainid": [2, 4], "sign": [2, 4], "meta": [2, 4], "get_datum": [2, 4], "cfevent": [2, 4], "round_id": [2, 4], "crypto": 2, "cfcertif": [2, 4], "pkei": [2, 4], "private_kei": [2, 4], "delet": [2, 4], "public_kei": [2, 4], "cfkei": [2, 4], "cfpkei": [2, 4], "size": [2, 4], "_from_byt": [2, 4], "_to_byt": [2, 4], "cfsign": [2, 4], "net": 2, "pkey_hash": [2, 4], "deseri": [2, 4], "serial": [2, 4], "datum": [2, 3], "cfdatum": [2, 4], "atom": [2, 4], "__repr__": [2, 4], "get_sub_datum": [2, 4], "cfdatumanchor": [2, 4], "cfdatumcustom": [2, 4], "data": [2, 3, 4], "cfdatumdecre": [2, 4], "subtyp": [2, 3, 4], "cfdatumemiss": [2, 4], "ticker": [2, 4], "valu": [2, 3, 4], "tsd": [2, 3, 4], "add_sign": [2, 4], "valid_sign_hash": [2, 4], "cfdatumtx": [2, 4], "ledger_rc": [2, 4], "accept": [2, 4], "get_item": [2, 4], "item": [2, 3], "cfdatumtoken": [2, 4], "cfsubdatum": [2, 4], "gdb": 2, "gdbgroup": [2, 4], "group": [2, 4], "get": [2, 4, 5], "group_list": [2, 4], "set": [2, 4], "gdbgroupbas": [2, 4], "add_to_white_list": [2, 4], "gdbgroupsign": [2, 4], "serializableobject": [2, 4], "cfitem": [2, 4], "cftxin": [2, 4], "prev_hash": [2, 4], "prev_idx": [2, 4], "cftxincond": [2, 4], "cftxout": [2, 4], "cftxoutcond": [2, 4], "expir": [2, 4], "cftxoutcondsubtypesrvpai": [2, 4], "cftxoutcondsubtypesrvstakelock": [2, 4], "unlock": [2, 4], "reinvest_perc": [2, 4], "cftxoutcondsubtypesrvstakeposdeleg": [2, 4], "cftxoutcondsubtypesrvxchang": [2, 4], "cftxoutext": [2, 4], "cftxpkei": [2, 4], "cftxreceipt": [2, 4], "cftxsig": [2, 4], "cftxtsd": [2, 4], "cftxtoken": [2, 4], "emission_hash": [2, 4], "emission_chain_id": [2, 4], "cftxvote": [2, 4], "log": 2, "cflog": [2, 4], "_logger": [2, 4], "att": [2, 4], "critic": [2, 4], "dap": [2, 3, 4, 5], "debug": [2, 4], "error": [2, 4], "info": [2, 4], "messag": [2, 4], "notic": [2, 4], "warn": [2, 4], "map": 2, "cfitemmapp": [2, 4], "build": [2, 4], "cfsubdatumbuild": [2, 4], "itemmeta": [2, 4], "subdatummeta": [2, 4], "math": 2, "cfchain": [2, 4], "_origin_chain": [2, 4], "name": [2, 3, 4], "get_atom": [2, 4], "get_mempool": [2, 4], "get_transact": [2, 4], "register_atom_notification_callback": [2, 4], "register_mempool_notification_callback": [2, 4], "cfledger": [2, 4], "_origin_ledg": [2, 4], "calc_address_bal": [2, 4], "get_emiss": [2, 4], "get_tx_ledger_rc": [2, 4], "get_tx_tick": [2, 4], "has_emiss": [2, 4], "register_ledger_tx_notification_callback": [2, 4], "token_auth_signs_pkey_hash": [2, 4], "token_auth_signs_tot": [2, 4], "token_auth_signs_valid": [2, 4], "tx_by_hash": [2, 4], "cfmempool": [2, 4], "get_datum_from_byt": [2, 4], "reason": [2, 4], "remov": [2, 4], "valid_signs_t": [2, 4], "cfnet": [2, 4], "_origin_net": [2, 4], "main": [2, 4], "zerochain": [2, 4], "fee_data": [2, 4], "active_net": [2, 4], "change_st": [2, 4], "get_ledg": [2, 4], "group_alia": [2, 4], "id": [2, 4], "net_id_from_wallet_str": [2, 4], "register_gdbsync_notification_callback": [2, 4], "cfnetid": [2, 4], "_origin_net_id": [2, 4], "long": [2, 4], "mempoolcallback": [2, 4], "netfe": [2, 4], "tx_fee": [2, 4], "tx_fee_addr": [2, 4], "validator_avg_fe": [2, 4], "validator_max_fe": [2, 4], "validator_min_fe": [2, 4], "native_tick": [2, 4], "notif": 2, "atom_notif": [2, 4], "gdbsync_notif": [2, 4], "ledger_tx_notif": [2, 4], "mempool_notif": [2, 4], "cfledgercacherespons": [2, 4], "dap_ledger_tx_check_ok": [2, 4], "dap_ledger_tx_check_null_tx": [2, 4], "dap_ledger_tx_check_invalid_tx_s": [2, 4], "dap_ledger_tx_already_cach": [2, 4], "dap_ledger_tx_check_invalid_tx_sign": [2, 4], "dap_ledger_tx_check_in_ems_already_us": [2, 4], "dap_ledger_tx_check_stake_lock_in_ems_already_us": [2, 4], "dap_ledger_tx_check_emission_not_found": [2, 4], "dap_ledger_tx_check_tx_no_valid_input": [2, 4], "dap_ledger_tx_check_ticker_not_found": [2, 4], "dap_ledger_tx_check_stake_lock_invalid_token": [2, 4], "dap_ledger_tx_check_stake_lock_no_out_cond_for_in_em": [2, 4], "dap_ledger_tx_check_mult256_overflow_ems_locked_x_r": [2, 4], "dap_ledger_tx_check_no_out_ext_for_girdled_in_em": [2, 4], "dap_ledger_tx_check_no_out_items_for_base_tx": [2, 4], "dap_ledger_tx_check_token_ems_value_exeeds_cur_suppli": [2, 4], "dap_ledger_tx_check_stake_lock_unexpected_valu": [2, 4], "dap_ledger_tx_check_stake_lock_ticker_not_found": [2, 4], "dap_ledger_tx_check_stake_lock_other_ticker_expect": [2, 4], "dap_ledger_tx_check_out_item_already_us": [2, 4], "dap_ledger_tx_check_prev_tx_not_found": [2, 4], "dap_ledger_tx_check_prev_out_item_not_found": [2, 4], "dap_ledger_tx_check_pkey_hashes_dont_match": [2, 4], "dap_ledger_tx_check_prev_out_already_used_in_current_tx": [2, 4], "dap_ledger_tx_check_no_verificator_set": [2, 4], "dap_ledger_tx_check_verificator_check_failur": [2, 4], "dap_ledger_tx_check_prev_ticker_not_found": [2, 4], "dap_ledger_tx_check_prev_token_not_found": [2, 4], "dap_ledger_permission_check_fail": [2, 4], "dap_ledger_tx_check_sum_ins_not_equal_sum_out": [2, 4], "dap_ledger_tx_check_reward_item_already_us": [2, 4], "dap_ledger_tx_check_reward_item_illeg": [2, 4], "cfnetstat": [2, 4], "net_state_offlin": [2, 4], "net_state_onlin": [2, 4], "type_unknown": [2, 4], "type_timestamp": [2, 4], "type_address": [2, 4], "type_valu": [2, 4], "type_contract": [2, 4], "type_net_id": [2, 4], "type_block_num": [2, 4], "type_token_sym": [2, 4], "type_outer_tx_hash": [2, 4], "type_sourc": [2, 4], "type_source_subtyp": [2, 4], "type_data": [2, 4], "type_send": [2, 4], "type_token_address": [2, 4], "type_signatur": [2, 4], "type_unique_id": [2, 4], "type_base_tx_hash": [2, 4], "type_emission_center_uid": [2, 4], "type_emission_center_v": [2, 4], "class": [2, 3, 4, 5], "contractprovid": 2, "provider_url": 2, "contract_address": 2, "abi": 2, "commision_wallet": 2, "none": [2, 3, 4], "chain_nam": [2, 4], "event_keys_map": 2, "native_token_index": 2, "pair_token_index": 2, "nft_contract": 2, "fals": [2, 4], "nft_token": 2, "network_id": 2, "base": [2, 3, 4, 5], "object": [2, 4, 5], "provid": [2, 4], "interact": 2, "smart": 2, "str": [2, 3, 4, 5], "list": [2, 3, 4, 5], "url": [2, 4, 5], "applic": 2, "binari": 2, "interfac": 2, "dict": [2, 4, 5], "wallet": [2, 4], "commiss": 2, "default": [2, 4], "option": [2, 4], "event": [2, 4], "kei": [2, 3, 4], "nativ": [2, 4], "token": [2, 3, 4], "int": [2, 3, 4, 5], "pair": [2, 4], "flag": 2, "indic": [2, 4], "whether": [2, 4], "": 2, "an": [2, 4], "nft": 2, "bool": [2, 4], "network": [2, 3, 4, 5], "all_ev": 2, "event_nam": 2, "kwarg": [2, 4, 5], "all": [2, 4], "particular": 2, "paramet": [2, 3, 4, 5], "addit": [2, 4], "keyword": [2, 4], "argument": [2, 4], "return": [2, 3, 4, 5], "entri": 2, "match": 2, "criteria": 2, "all_events_from_last_tri": 2, "from": [2, 4], "last": 2, "try": 2, "attempt": 2, "properti": [2, 4, 5], "instanc": [2, 4], "event_from_tx_log": 2, "tx_hash": 2, "transact": [2, 3, 4], "function": [2, 4, 5], "contractfunct": 2, "txhash": 2, "detail": 2, "tupl": [2, 3, 5], "contain": [2, 3, 4], "native_token_tick": 2, "els": 2, "symbol": [2, 4], "erc20": 2, "normalized_event_data": 2, "ev": 2, "normal": 2, "rais": [2, 3, 4], "runtimeerror": 2, "If": [2, 3, 4], "i": [2, 3, 4], "pair_token_tick": 2, "reserv": 2, "0": [2, 4], "suppli": 2, "total": 2, "w3": 2, "web3": 2, "connect": 2, "connectionerror": 2, "valid": [2, 4], "link": 2, "ar": 2, "fail": [2, 4], "gdbtabl": 2, "tabl": 2, "A": [2, 3, 4, 5], "repres": [2, 4, 5], "global": 2, "databas": 2, "thi": [2, 4], "method": [2, 4, 5], "specif": [2, 4], "The": [2, 3, 4, 5], "associ": [2, 4], "given": [2, 3, 4], "found": [2, 4], "load": 2, "sync_group": 2, "netnam": 2, "grp": 2, "cbname": 2, "synchron": 2, "us": [2, 4], "listcach": 2, "capac": 2, "cach": [2, 4], "implement": 2, "mechan": [2, 4], "specifi": [2, 4], "maximum": [2, 4], "store": 2, "add": [2, 4], "find_tx_out": 2, "tx": [2, 4], "out_typ": 2, "find": 2, "output": [2, 3, 4], "txout": 2, "get_tsd_data": 2, "tsd_list": 2, "type_tsd": 2, "retriev": [2, 4], "ani": [2, 4], "get_tx_item": 2, "get_tx_out": 2, "json_dump": 2, "python": 2, "json": 2, "format": [2, 3], "string": [2, 3, 4], "json_load": 2, "net_by_nam": 2, "init_tornado_http": 2, "handler": [2, 4, 5], "port": 2, "initi": [2, 3, 4], "tornado": 2, "server": [2, 4, 5], "pattern": [2, 4], "listen": 2, "callabl": [2, 4, 5], "handl": [2, 4, 5], "incom": 2, "request": [2, 5], "number": [2, 3, 4], "baseexcept": 2, "instal": 2, "extern": 2, "unavail": 2, "byte": [3, 4, 5], "pars": 3, "cf": 3, "v1": 3, "its": [3, 4], "variou": 3, "compon": 3, "follow": 3, "identifi": [3, 4], "cd": 3, "sign_id": 3, "signatur": [3, 4], "public_hash": 3, "public": [3, 4], "summary_hash": 3, "summari": 3, "control_hash": 3, "control": 3, "valueerror": 3, "invalid": [3, 4], "qualnam": [3, 4], "start": [3, 4], "1": [3, 4], "boundari": [3, 4], "enum": [3, 4], "enumer": 3, "count": [3, 4], "last_valu": [3, 4], "gener": [3, 4], "next": [3, 4], "when": [3, 4], "member": [3, 4], "exist": [3, 4], "assign": [3, 4], "declar": 3, "emiss": [3, 4], "custom": [3, 4], "decre": [3, 4], "anchor": [3, 4], "input": [3, 4], "condit": [3, 4], "receipt": [3, 4], "extend": [3, 4], "time": [3, 4], "stamp": [3, 4], "vote": 3, "servic": 3, "payment": [3, 4], "stake": [3, 4], "lock": [3, 4], "exchang": [3, 4], "proof": 3, "deleg": 3, "cfsimplehttprequest": [4, 5], "bodi": [4, 5], "client_address": [4, 5], "queri": [4, 5], "cfsimplehttprequesthandl": [4, 5], "cfsimplehttpserv": [4, 5], "register_uri_handl": [4, 5], "cellfram": 4, "work": 4, "origin": 4, "chainaddr": 4, "execut": 4, "invok": 4, "help": 4, "text": 4, "optionpars": 4, "arg": 4, "protocol": 4, "reply_object": 4, "call": 4, "replyid": 4, "send": 4, "chainatomptr": 4, "block": 4, "timestamp": 4, "wa": 4, "creat": 4, "cell": 4, "metadata": 4, "round": 4, "certificate_nam": 4, "certif": 4, "privat": 4, "alia": 4, "static": [4, 5], "represent": 4, "convert": 4, "deriv": 4, "creation": 4, "datetim": 4, "parent": 4, "sub": 4, "union": 4, "parent_datum": 4, "sub_datum": 4, "datumanchor": 4, "cryptograph": 4, "raw": 4, "hexadecim": 4, "datumdecre": 4, "datumemiss": 4, "emit": 4, "asset": 4, "float": 4, "includ": 4, "dictionari": 4, "datumtx": 4, "respons": [4, 5], "code": [4, 5], "ledger": 4, "filter_typ": 4, "t": 4, "filter": 4, "datumtoken": 4, "context": 4, "d": 4, "true": 4, "success": 4, "otherwis": 4, "abc": 4, "abstract": 4, "net_nam": 4, "group_mask": 4, "callback_arg": 4, "white": 4, "mask": 4, "exampl": 4, "raiden": 4, "center": 4, "serializ": 4, "origin_item": 4, "originitemtyp": 4, "previou": 4, "recipi": 4, "reinvest": 4, "percentag": 4, "attent": 4, "decentr": 4, "autonom": 4, "process": [4, 5], "framework": 4, "inform": 4, "correspond": 4, "wrapper": [4, 5], "itemmap": 4, "subdatummap": 4, "iter": 4, "over": 4, "yield": 4, "typeerror": 4, "neither": 4, "nor": 4, "subdatum": 4, "mempool": 4, "calcul": 4, "balanc": 4, "ledger_cache_rc": 4, "rc": 4, "check": 4, "\u0445\u044d\u0448\u0438": 4, "\u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0445": 4, "\u043a\u043b\u044e\u0447\u0435\u0439": 4, "\u0434\u043b\u044f": 4, "\u043f\u043e\u0434\u043f\u0438\u0441\u0438": 4, "\u044d\u043c\u0438\u0441\u0441\u0438\u0438": 4, "\u0442\u0438\u043a\u0435\u0440\u0430": 4, "coin": 4, "\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e": 4, "\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435": 4, "\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e": 4, "\u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439": 4, "\u0432\u0430\u043b\u0438\u0434\u043d\u044b\u0445": 4, "name_or_id": 4, "fee": 4, "activ": 4, "state": 4, "chang": 4, "notimpl": 4, "gdbsync": 4, "str_or_origin": 4, "netid": 4, "op_cod": 4, "liter": 4, "datum_hash": 4, "oper": 4, "networ": 4, "adress": 4, "averag": 4, "minimum": 4, "collect": 4, "decor": [4, 5], "posit": 4, "to_arg": 4, "to_kwarg": 4, "def": 4, "on_new_atom": 4, "pass": 4, "on_new_table_record": 4, "on_new_ledger_transact": 4, "on_mempool_chang": 4, "null": 4, "ha": 4, "alreadi": 4, "been": 4, "verif": 4, "failur": 4, "permiss": 4, "reward": 4, "alredi": 4, "illeg": 4, "offlin": 4, "onlin": 4, "differ": 4, "unknown": 4, "sourc": 4, "sender": 4, "uniqu": 4, "trancact": 4, "2": 4, "16": 4, "6": 4, "4": 4, "11": 4, "17": 4, "18": 4, "5": 4, "8": 4, "12": 4, "14": 4, "9": 4, "10": 4, "13": 4, "7": 4, "15": 4, "3": 4, "httpsimpl": 5, "client": 5, "ip": 5, "path": 5, "support": 5, "response_cod": 5, "httpcode": 5, "uri": 5}, "objects": {"": [[2, 0, 0, "-", "pycfhelpers"]], "pycfhelpers": [[3, 0, 0, "-", "common"], [2, 0, 0, "-", "contract"], [2, 0, 0, "-", "globaldb"], [2, 0, 0, "-", "helpers"], [4, 0, 0, "-", "node"], [2, 0, 0, "-", "tornado_http"]], "pycfhelpers.common": [[3, 0, 0, "-", "parsers"], [3, 0, 0, "-", "types"]], "pycfhelpers.common.parsers": [[3, 1, 1, "", "parse_cf_v1_address"]], "pycfhelpers.common.types": [[3, 2, 1, "", "ChainTypes"], [3, 2, 1, "", "DatumTypes"], [3, 2, 1, "", "ItemTypes"]], "pycfhelpers.common.types.ChainTypes": [[3, 3, 1, "", "_generate_next_value_"], [3, 4, 1, "id0", "dag_poa"], [3, 4, 1, "id1", "esbocs"]], "pycfhelpers.common.types.DatumTypes": [[3, 4, 1, "id2", "DATUM_ANCHOR"], [3, 4, 1, "id3", "DATUM_CUSTOM"], [3, 4, 1, "id4", "DATUM_DECREE"], [3, 4, 1, "id5", "DATUM_TOKEN_DECL"], [3, 4, 1, "id6", "DATUM_TOKEN_EMISSION"], [3, 4, 1, "id7", "DATUM_TX"], [3, 3, 1, "", "_generate_next_value_"]], "pycfhelpers.common.types.ItemTypes": [[3, 4, 1, "id8", "DAP_CHAIN_TX_OUT_COND_SUBTYPE_SRV_PAY"], [3, 4, 1, "id9", "DAP_CHAIN_TX_OUT_COND_SUBTYPE_SRV_STAKE_LOCK"], [3, 4, 1, "id10", "DAP_CHAIN_TX_OUT_COND_SUBTYPE_SRV_STAKE_POS_DELEGATE"], [3, 4, 1, "id11", "DAP_CHAIN_TX_OUT_COND_SUBTYPE_SRV_XCHANGE"], [3, 4, 1, "id12", "TX_ITEM_TYPE_IN"], [3, 4, 1, "id13", "TX_ITEM_TYPE_IN_COND"], [3, 4, 1, "id14", "TX_ITEM_TYPE_IN_EMS"], [3, 4, 1, "id15", "TX_ITEM_TYPE_OUT"], [3, 4, 1, "id16", "TX_ITEM_TYPE_OUT_COND"], [3, 4, 1, "id17", "TX_ITEM_TYPE_OUT_EXT"], [3, 4, 1, "id18", "TX_ITEM_TYPE_PKEY"], [3, 4, 1, "id19", "TX_ITEM_TYPE_RECEIPT"], [3, 4, 1, "id20", "TX_ITEM_TYPE_SIG"], [3, 4, 1, "id21", "TX_ITEM_TYPE_TSD"], [3, 4, 1, "id22", "TX_ITEM_TYPE_VOTE"], [3, 4, 1, "id23", "TX_ITEM_TYPE_VOTING"], [3, 3, 1, "", "_generate_next_value_"]], "pycfhelpers.contract": [[2, 2, 1, "", "ContractProvider"]], "pycfhelpers.contract.ContractProvider": [[2, 4, 1, "", "abi"], [2, 3, 1, "", "all_events"], [2, 3, 1, "", "all_events_from_last_try"], [2, 4, 1, "", "cfnet"], [2, 4, 1, "", "chain_name"], [2, 4, 1, "", "commision_wallet"], [2, 5, 1, "", "contract"], [2, 4, 1, "", "contract_address"], [2, 3, 1, "", "event_from_tx_logs"], [2, 4, 1, "", "event_keys_map"], [2, 5, 1, "", "functions"], [2, 3, 1, "", "get_transaction"], [2, 4, 1, "", "name"], [2, 4, 1, "", "native_token_index"], [2, 5, 1, "", "native_token_ticker"], [2, 4, 1, "", "network_id"], [2, 4, 1, "", "nft_contract"], [2, 4, 1, "", "nft_token"], [2, 3, 1, "", "normalized_event_data"], [2, 4, 1, "", "pair_token_index"], [2, 5, 1, "", "pair_token_ticker"], [2, 4, 1, "", "provider_urls"], [2, 5, 1, "", "reserves"], [2, 5, 1, "", "supply"], [2, 5, 1, "", "w3"]], "pycfhelpers.globaldb": [[2, 2, 1, "", "GDBTable"], [2, 1, 1, "", "sync_group"]], "pycfhelpers.globaldb.GDBTable": [[2, 3, 1, "", "delete"], [2, 3, 1, "", "get"], [2, 3, 1, "", "group_list"], [2, 3, 1, "", "set"], [2, 4, 1, "", "table"]], "pycfhelpers.helpers": [[2, 2, 1, "", "ListCache"], [2, 1, 1, "", "find_tx_out"], [2, 1, 1, "", "get_tsd_data"], [2, 1, 1, "", "get_tx_items"], [2, 1, 1, "", "get_tx_outs"], [2, 1, 1, "", "json_dump"], [2, 1, 1, "", "json_load"], [2, 1, 1, "", "net_by_name"]], "pycfhelpers.helpers.ListCache": [[2, 3, 1, "", "add"], [2, 4, 1, "", "capacity"], [2, 3, 1, "id0", "data"]], "pycfhelpers.node": [[4, 0, 0, "-", "address"], [4, 0, 0, "-", "cli"], [4, 0, 0, "-", "consensus"], [4, 0, 0, "-", "crypto"], [4, 0, 0, "-", "datums"], [4, 0, 0, "-", "gdb"], [5, 0, 0, "-", "http"], [4, 0, 0, "-", "items"], [4, 0, 0, "-", "logging"], [4, 0, 0, "-", "mappings"], [4, 0, 0, "-", "math"], [4, 0, 0, "-", "net"], [4, 0, 0, "-", "notificators"], [4, 0, 0, "-", "types"]], "pycfhelpers.node.address": [[4, 2, 1, "", "CFWalletAddress"]], "pycfhelpers.node.address.CFWalletAddress": [[4, 4, 1, "", "_original_addr"], [4, 3, 1, "", "net_id"]], "pycfhelpers.node.cli": [[4, 2, 1, "", "CFCliCommand"], [4, 2, 1, "", "CliCallback"], [4, 2, 1, "", "ReplyObject"]], "pycfhelpers.node.cli.CFCliCommand": [[4, 4, 1, "", "callback"], [4, 4, 1, "", "command"], [4, 4, 1, "", "help_text"], [4, 4, 1, "", "parser"], [4, 3, 1, "", "register"]], "pycfhelpers.node.cli.CliCallback": [[4, 3, 1, "", "__call__"]], "pycfhelpers.node.cli.ReplyObject": [[4, 3, 1, "", "reply"], [4, 4, 1, "", "reply_id"]], "pycfhelpers.node.consensus": [[4, 2, 1, "", "CFBlock"], [4, 2, 1, "", "CFEvent"]], "pycfhelpers.node.consensus.CFBlock": [[4, 4, 1, "", "cell_id"], [4, 4, 1, "", "chain"], [4, 4, 1, "", "chainid"], [4, 4, 1, "", "created_at"], [4, 3, 1, "", "get_datums"], [4, 4, 1, "", "hash"], [4, 4, 1, "", "meta"], [4, 4, 1, "", "signs"], [4, 4, 1, "", "version"]], "pycfhelpers.node.consensus.CFEvent": [[4, 4, 1, "", "cell_id"], [4, 4, 1, "", "chain"], [4, 4, 1, "", "created_at"], [4, 3, 1, "", "get_datums"], [4, 4, 1, "", "hash"], [4, 4, 1, "", "hashes"], [4, 4, 1, "", "round_id"], [4, 4, 1, "", "version"]], "pycfhelpers.node.crypto": [[4, 2, 1, "", "CFCertificate"], [4, 2, 1, "", "CFKey"], [4, 2, 1, "", "CFPkey"], [4, 2, 1, "", "CFSign"]], "pycfhelpers.node.crypto.CFCertificate": [[4, 3, 1, "", "delete"], [4, 4, 1, "", "pkey"], [4, 5, 1, "id0", "private_key"], [4, 5, 1, "", "public_key"]], "pycfhelpers.node.crypto.CFPkey": [[4, 3, 1, "", "_from_bytes"], [4, 3, 1, "", "_to_bytes"], [4, 4, 1, "", "hash"], [4, 4, 1, "", "size"], [4, 4, 1, "", "type"]], "pycfhelpers.node.crypto.CFSign": [[4, 4, 1, "", "address"], [4, 3, 1, "", "deserialize"], [4, 4, 1, "", "net"], [4, 4, 1, "", "pkey"], [4, 4, 1, "", "pkey_hash"], [4, 3, 1, "", "serialize"], [4, 4, 1, "", "size"], [4, 4, 1, "", "type"]], "pycfhelpers.node.datums": [[4, 2, 1, "", "CFDatum"], [4, 2, 1, "", "CFDatumAnchor"], [4, 2, 1, "", "CFDatumCustom"], [4, 2, 1, "", "CFDatumDecree"], [4, 2, 1, "", "CFDatumEmission"], [4, 2, 1, "", "CFDatumTX"], [4, 2, 1, "", "CFDatumToken"], [4, 2, 1, "", "CFSubDatum"]], "pycfhelpers.node.datums.CFDatum": [[4, 3, 1, "", "__repr__"], [4, 4, 1, "", "atom"], [4, 4, 1, "", "created_at"], [4, 3, 1, "", "get_sub_datum"], [4, 4, 1, "", "hash"], [4, 4, 1, "", "net"], [4, 3, 1, "", "serialize"], [4, 4, 1, "", "size"], [4, 4, 1, "", "type"], [4, 4, 1, "", "version"]], "pycfhelpers.node.datums.CFDatumAnchor": [[4, 4, 1, "", "created_at"], [4, 4, 1, "", "hash"], [4, 4, 1, "", "signs"]], "pycfhelpers.node.datums.CFDatumCustom": [[4, 4, 1, "", "data"], [4, 4, 1, "", "hash"], [4, 4, 1, "", "type"]], "pycfhelpers.node.datums.CFDatumDecree": [[4, 4, 1, "", "created_at"], [4, 4, 1, "", "hash"], [4, 4, 1, "", "signs"], [4, 4, 1, "", "subtype"], [4, 4, 1, "", "type"]], "pycfhelpers.node.datums.CFDatumEmission": [[4, 3, 1, "", "__repr__"], [4, 3, 1, "", "add_sign"], [4, 4, 1, "", "address"], [4, 4, 1, "", "data"], [4, 4, 1, "", "hash"], [4, 5, 1, "", "signs"], [4, 4, 1, "", "ticker"], [4, 4, 1, "", "tsd"], [4, 4, 1, "", "type"], [4, 5, 1, "", "valid_sign_hashes"], [4, 4, 1, "", "value"], [4, 4, 1, "", "version"]], "pycfhelpers.node.datums.CFDatumTX": [[4, 4, 1, "", "accepted"], [4, 4, 1, "", "created_at"], [4, 3, 1, "", "get_items"], [4, 5, 1, "", "items"], [4, 4, 1, "", "ledger_rc"], [4, 4, 1, "", "ticker"]], "pycfhelpers.node.datums.CFDatumToken": [[4, 4, 1, "", "data"], [4, 4, 1, "", "hash"], [4, 4, 1, "", "signs"], [4, 4, 1, "", "ticker"], [4, 4, 1, "", "type"]], "pycfhelpers.node.datums.CFSubDatum": [[4, 4, 1, "", "hash"], [4, 5, 1, "", "net"], [4, 4, 1, "", "type"]], "pycfhelpers.node.gdb": [[4, 2, 1, "", "GDBGroup"], [4, 2, 1, "", "GDBGroupBase"], [4, 2, 1, "", "GDBGroupSign"], [4, 2, 1, "", "SerializableObject"]], "pycfhelpers.node.gdb.GDBGroup": [[4, 3, 1, "", "delete"], [4, 3, 1, "", "get"], [4, 4, 1, "", "group"], [4, 3, 1, "", "group_list"], [4, 3, 1, "", "set"]], "pycfhelpers.node.gdb.GDBGroupBase": [[4, 3, 1, "", "add_to_white_list"], [4, 3, 1, "", "delete"], [4, 3, 1, "", "get"], [4, 4, 1, "", "group"], [4, 3, 1, "", "group_list"], [4, 3, 1, "", "set"]], "pycfhelpers.node.gdb.GDBGroupSign": [[4, 3, 1, "", "delete"], [4, 3, 1, "", "get"], [4, 4, 1, "", "group"], [4, 3, 1, "", "group_list"], [4, 3, 1, "", "set"]], "pycfhelpers.node.gdb.SerializableObject": [[4, 3, 1, "", "deserialize"], [4, 3, 1, "", "serialize"]], "pycfhelpers.node.http": [[5, 0, 0, "-", "simple"]], "pycfhelpers.node.http.simple": [[5, 2, 1, "", "CFSimpleHTTPRequest"], [5, 2, 1, "", "CFSimpleHTTPRequestHandler"], [5, 2, 1, "", "CFSimpleHTTPServer"]], "pycfhelpers.node.http.simple.CFSimpleHTTPRequest": [[5, 5, 1, "", "body"], [5, 5, 1, "", "client_address"], [5, 4, 1, "", "http"], [5, 5, 1, "", "method"], [5, 5, 1, "", "query"], [5, 5, 1, "", "url"]], "pycfhelpers.node.http.simple.CFSimpleHTTPRequestHandler": [[5, 3, 1, "", "__call__"], [5, 4, 1, "", "handler"], [5, 4, 1, "", "methods"]], "pycfhelpers.node.http.simple.CFSimpleHTTPServer": [[5, 3, 1, "", "handler"], [5, 3, 1, "", "register_uri_handler"]], "pycfhelpers.node.items": [[4, 2, 1, "", "CFItem"], [4, 2, 1, "", "CFTxIn"], [4, 2, 1, "", "CFTxInCond"], [4, 2, 1, "", "CFTxOut"], [4, 2, 1, "", "CFTxOutCond"], [4, 2, 1, "", "CFTxOutCondSubtypeSrvPay"], [4, 2, 1, "", "CFTxOutCondSubtypeSrvStakeLock"], [4, 2, 1, "", "CFTxOutCondSubtypeSrvStakePosDelegate"], [4, 2, 1, "", "CFTxOutCondSubtypeSrvXchange"], [4, 2, 1, "", "CFTxOutExt"], [4, 2, 1, "", "CFTxPkey"], [4, 2, 1, "", "CFTxReceipt"], [4, 2, 1, "", "CFTxSig"], [4, 2, 1, "", "CFTxTSD"], [4, 2, 1, "", "CFTxToken"], [4, 2, 1, "", "CFTxVote"], [4, 2, 1, "", "CFTxVoting"]], "pycfhelpers.node.items.CFItem": [[4, 4, 1, "", "net"], [4, 4, 1, "", "type"]], "pycfhelpers.node.items.CFTxIn": [[4, 4, 1, "", "prev_hash"], [4, 4, 1, "", "prev_idx"]], "pycfhelpers.node.items.CFTxOut": [[4, 4, 1, "", "address"], [4, 4, 1, "", "value"]], "pycfhelpers.node.items.CFTxOutCond": [[4, 4, 1, "", "expires"], [4, 4, 1, "", "subtype"], [4, 4, 1, "", "value"]], "pycfhelpers.node.items.CFTxOutCondSubtypeSrvStakeLock": [[4, 4, 1, "", "reinvest_percent"], [4, 4, 1, "", "unlock"], [4, 4, 1, "", "value"]], "pycfhelpers.node.items.CFTxOutExt": [[4, 4, 1, "", "address"], [4, 4, 1, "", "ticker"], [4, 4, 1, "", "value"]], "pycfhelpers.node.items.CFTxSig": [[4, 4, 1, "", "sign"], [4, 4, 1, "", "size"]], "pycfhelpers.node.items.CFTxToken": [[4, 4, 1, "", "emission_chain_id"], [4, 4, 1, "", "emission_hash"], [4, 4, 1, "", "ticker"]], "pycfhelpers.node.logging": [[4, 2, 1, "", "CFLog"]], "pycfhelpers.node.logging.CFLog": [[4, 4, 1, "", "_logger"], [4, 3, 1, "", "att"], [4, 3, 1, "", "critical"], [4, 3, 1, "", "dap"], [4, 3, 1, "", "debug"], [4, 3, 1, "", "error"], [4, 3, 1, "", "info"], [4, 3, 1, "", "message"], [4, 3, 1, "", "notice"], [4, 3, 1, "", "warning"]], "pycfhelpers.node.mappings": [[4, 2, 1, "", "CFItemMapper"], [4, 2, 1, "", "CFSubDatumBuilder"], [4, 4, 1, "", "ItemMeta"], [4, 4, 1, "", "SubDatumMeta"]], "pycfhelpers.node.mappings.CFItemMapper": [[4, 3, 1, "", "build"]], "pycfhelpers.node.mappings.CFSubDatumBuilder": [[4, 3, 1, "", "build"]], "pycfhelpers.node.net": [[4, 2, 1, "", "CFChain"], [4, 2, 1, "", "CFLedger"], [4, 2, 1, "", "CFMempool"], [4, 2, 1, "", "CFNet"], [4, 2, 1, "", "CFNetID"], [4, 2, 1, "", "MempoolCallback"], [4, 2, 1, "", "NetFee"]], "pycfhelpers.node.net.CFChain": [[4, 4, 1, "", "_origin_chain"], [4, 3, 1, "", "get_atoms"], [4, 3, 1, "", "get_datums"], [4, 3, 1, "", "get_mempool"], [4, 3, 1, "", "get_transactions"], [4, 4, 1, "", "name"], [4, 4, 1, "", "net"], [4, 3, 1, "", "register_atom_notification_callback"], [4, 3, 1, "", "register_mempool_notification_callback"], [4, 4, 1, "", "type"]], "pycfhelpers.node.net.CFLedger": [[4, 4, 1, "", "_origin_ledger"], [4, 3, 1, "", "calc_address_balances"], [4, 3, 1, "", "get_emission"], [4, 3, 1, "", "get_tx_ledger_rc"], [4, 3, 1, "", "get_tx_ticker"], [4, 3, 1, "", "has_emission"], [4, 4, 1, "", "net"], [4, 3, 1, "", "register_ledger_tx_notification_callback"], [4, 3, 1, "", "token_auth_signs_pkey_hashes"], [4, 3, 1, "", "token_auth_signs_total"], [4, 3, 1, "", "token_auth_signs_valid"], [4, 3, 1, "", "tx_by_hash"]], "pycfhelpers.node.net.CFMempool": [[4, 4, 1, "", "chain"], [4, 3, 1, "", "get_datum_from_bytes"], [4, 3, 1, "", "get_datums"], [4, 3, 1, "", "reason"], [4, 3, 1, "", "remove"], [4, 3, 1, "", "valid_signs_table"]], "pycfhelpers.node.net.CFNet": [[4, 4, 1, "", "_origin_net"], [4, 3, 1, "", "active_nets"], [4, 4, 1, "", "address"], [4, 5, 1, "", "chains"], [4, 3, 1, "", "change_state"], [4, 4, 1, "", "fee_data"], [4, 3, 1, "", "get_ledger"], [4, 5, 1, "", "group_alias"], [4, 5, 1, "", "id"], [4, 4, 1, "", "main"], [4, 4, 1, "", "name"], [4, 3, 1, "", "net_id_from_wallet_str"], [4, 3, 1, "", "register_gdbsync_notification_callback"], [4, 4, 1, "", "zerochain"]], "pycfhelpers.node.net.CFNetID": [[4, 4, 1, "", "_origin_net_id"], [4, 5, 1, "", "long"]], "pycfhelpers.node.net.MempoolCallback": [[4, 3, 1, "", "__call__"]], "pycfhelpers.node.net.NetFee": [[4, 4, 1, "", "native_ticker"], [4, 4, 1, "", "net"], [4, 4, 1, "", "tx_fee"], [4, 4, 1, "", "tx_fee_addr"], [4, 4, 1, "", "validator_avg_fee"], [4, 4, 1, "", "validator_max_fee"], [4, 4, 1, "", "validator_min_fee"]], "pycfhelpers.node.notificators": [[4, 2, 1, "", "CFNets"]], "pycfhelpers.node.notificators.CFNets": [[4, 3, 1, "", "atom_notificator"], [4, 3, 1, "", "gdbsync_notificator"], [4, 3, 1, "", "ledger_tx_notificator"], [4, 3, 1, "", "mempool_notificator"], [4, 4, 1, "", "nets"]], "pycfhelpers.node.types": [[4, 2, 1, "", "CFLedgerCacheResponse"], [4, 2, 1, "", "CFNetState"], [4, 2, 1, "", "TSD"]], "pycfhelpers.node.types.CFLedgerCacheResponse": [[4, 4, 1, "id1", "DAP_LEDGER_PERMISSION_CHECK_FAILED"], [4, 4, 1, "id2", "DAP_LEDGER_TX_ALREADY_CACHED"], [4, 4, 1, "id3", "DAP_LEDGER_TX_CHECK_EMISSION_NOT_FOUND"], [4, 4, 1, "id4", "DAP_LEDGER_TX_CHECK_INVALID_TX_SIGN"], [4, 4, 1, "id5", "DAP_LEDGER_TX_CHECK_INVALID_TX_SIZE"], [4, 4, 1, "id6", "DAP_LEDGER_TX_CHECK_IN_EMS_ALREADY_USED"], [4, 4, 1, "id7", "DAP_LEDGER_TX_CHECK_MULT256_OVERFLOW_EMS_LOCKED_X_RATE"], [4, 4, 1, "id8", "DAP_LEDGER_TX_CHECK_NO_OUT_EXT_FOR_GIRDLED_IN_EMS"], [4, 4, 1, "id9", "DAP_LEDGER_TX_CHECK_NO_OUT_ITEMS_FOR_BASE_TX"], [4, 4, 1, "id10", "DAP_LEDGER_TX_CHECK_NO_VERIFICATOR_SET"], [4, 4, 1, "id11", "DAP_LEDGER_TX_CHECK_NULL_TX"], [4, 4, 1, "id12", "DAP_LEDGER_TX_CHECK_OK"], [4, 4, 1, "id13", "DAP_LEDGER_TX_CHECK_OUT_ITEM_ALREADY_USED"], [4, 4, 1, "id14", "DAP_LEDGER_TX_CHECK_PKEY_HASHES_DONT_MATCH"], [4, 4, 1, "id15", "DAP_LEDGER_TX_CHECK_PREV_OUT_ALREADY_USED_IN_CURRENT_TX"], [4, 4, 1, "id16", "DAP_LEDGER_TX_CHECK_PREV_OUT_ITEM_NOT_FOUND"], [4, 4, 1, "id17", "DAP_LEDGER_TX_CHECK_PREV_TICKER_NOT_FOUND"], [4, 4, 1, "id18", "DAP_LEDGER_TX_CHECK_PREV_TOKEN_NOT_FOUND"], [4, 4, 1, "id19", "DAP_LEDGER_TX_CHECK_PREV_TX_NOT_FOUND"], [4, 4, 1, "id20", "DAP_LEDGER_TX_CHECK_REWARD_ITEM_ALREADY_USED"], [4, 4, 1, "id21", "DAP_LEDGER_TX_CHECK_REWARD_ITEM_ILLEGAL"], [4, 4, 1, "id22", "DAP_LEDGER_TX_CHECK_STAKE_LOCK_INVALID_TOKEN"], [4, 4, 1, "id23", "DAP_LEDGER_TX_CHECK_STAKE_LOCK_IN_EMS_ALREADY_USED"], [4, 4, 1, "id24", "DAP_LEDGER_TX_CHECK_STAKE_LOCK_NO_OUT_COND_FOR_IN_EMS"], [4, 4, 1, "id25", "DAP_LEDGER_TX_CHECK_STAKE_LOCK_OTHER_TICKER_EXPECTED"], [4, 4, 1, "id26", "DAP_LEDGER_TX_CHECK_STAKE_LOCK_TICKER_NOT_FOUND"], [4, 4, 1, "id27", "DAP_LEDGER_TX_CHECK_STAKE_LOCK_UNEXPECTED_VALUE"], [4, 4, 1, "id28", "DAP_LEDGER_TX_CHECK_SUM_INS_NOT_EQUAL_SUM_OUTS"], [4, 4, 1, "id29", "DAP_LEDGER_TX_CHECK_TICKER_NOT_FOUND"], [4, 4, 1, "id30", "DAP_LEDGER_TX_CHECK_TOKEN_EMS_VALUE_EXEEDS_CUR_SUPPLY"], [4, 4, 1, "id31", "DAP_LEDGER_TX_CHECK_TX_NO_VALID_INPUTS"], [4, 4, 1, "id32", "DAP_LEDGER_TX_CHECK_VERIFICATOR_CHECK_FAILURE"], [4, 3, 1, "", "_generate_next_value_"]], "pycfhelpers.node.types.CFNetState": [[4, 4, 1, "id33", "NET_STATE_OFFLINE"], [4, 4, 1, "id34", "NET_STATE_ONLINE"], [4, 3, 1, "", "_generate_next_value_"]], "pycfhelpers.node.types.TSD": [[4, 4, 1, "id35", "TYPE_ADDRESS"], [4, 4, 1, "id36", "TYPE_BASE_TX_HASH"], [4, 4, 1, "id37", "TYPE_BLOCK_NUM"], [4, 4, 1, "id38", "TYPE_CONTRACT"], [4, 4, 1, "id39", "TYPE_DATA"], [4, 4, 1, "id40", "TYPE_EMISSION_CENTER_UID"], [4, 4, 1, "id41", "TYPE_EMISSION_CENTER_VER"], [4, 4, 1, "id42", "TYPE_NET_ID"], [4, 4, 1, "id43", "TYPE_OUTER_TX_HASH"], [4, 4, 1, "id44", "TYPE_SENDER"], [4, 4, 1, "id45", "TYPE_SIGNATURS"], [4, 4, 1, "id46", "TYPE_SOURCE"], [4, 4, 1, "id47", "TYPE_SOURCE_SUBTYPE"], [4, 4, 1, "id48", "TYPE_TIMESTAMP"], [4, 4, 1, "id49", "TYPE_TOKEN_ADDRESS"], [4, 4, 1, "id50", "TYPE_TOKEN_SYM"], [4, 4, 1, "id51", "TYPE_UNIQUE_ID"], [4, 4, 1, "id52", "TYPE_UNKNOWN"], [4, 4, 1, "id53", "TYPE_VALUE"]], "pycfhelpers.tornado_http": [[2, 1, 1, "", "init_tornado_http"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "test": 0, "": 0, "document": 0, "content": [0, 2, 3, 4, 5], "indic": 0, "tabl": 0, "pycfhelp": [1, 2, 3, 4, 5], "packag": [2, 3, 4, 5], "subpackag": [2, 4], "submodul": [2, 3, 4, 5], "contract": 2, "modul": [2, 3, 4, 5], "globaldb": 2, "helper": 2, "logger": 2, "tornado_http": 2, "common": 3, "parser": 3, "type": [3, 4], "node": [4, 5], "address": 4, "cli": 4, "consensu": 4, "crypto": 4, "datum": 4, "gdb": 4, "item": 4, "log": 4, "map": 4, "math": 4, "net": 4, "notif": 4, "http": 5, "simpl": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Welcome to test\u2019s documentation!": [[0, "welcome-to-test-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "pycfhelpers": [[1, "pycfhelpers"]], "pycfhelpers package": [[2, "pycfhelpers-package"]], "Subpackages": [[2, "subpackages"], [4, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"]], "pycfhelpers.contract module": [[2, "module-pycfhelpers.contract"]], "pycfhelpers.globaldb module": [[2, "module-pycfhelpers.globaldb"]], "pycfhelpers.helpers module": [[2, "module-pycfhelpers.helpers"]], "pycfhelpers.logger module": [[2, "pycfhelpers-logger-module"]], "pycfhelpers.tornado_http module": [[2, "module-pycfhelpers.tornado_http"]], "Module contents": [[2, "module-pycfhelpers"], [3, "module-pycfhelpers.common"], [4, "module-pycfhelpers.node"], [5, "module-pycfhelpers.node.http"]], "pycfhelpers.common package": [[3, "pycfhelpers-common-package"]], "pycfhelpers.common.parsers module": [[3, "module-pycfhelpers.common.parsers"]], "pycfhelpers.common.types module": [[3, "module-pycfhelpers.common.types"]], "pycfhelpers.node package": [[4, "pycfhelpers-node-package"]], "pycfhelpers.node.address module": [[4, "module-pycfhelpers.node.address"]], "pycfhelpers.node.cli module": [[4, "module-pycfhelpers.node.cli"]], "pycfhelpers.node.consensus module": [[4, "module-pycfhelpers.node.consensus"]], "pycfhelpers.node.crypto module": [[4, "module-pycfhelpers.node.crypto"]], "pycfhelpers.node.datums module": [[4, "module-pycfhelpers.node.datums"]], "pycfhelpers.node.gdb module": [[4, "module-pycfhelpers.node.gdb"]], "pycfhelpers.node.items module": [[4, "module-pycfhelpers.node.items"]], "pycfhelpers.node.logging module": [[4, "module-pycfhelpers.node.logging"]], "pycfhelpers.node.mappings module": [[4, "module-pycfhelpers.node.mappings"]], "pycfhelpers.node.math module": [[4, "module-pycfhelpers.node.math"]], "pycfhelpers.node.net module": [[4, "module-pycfhelpers.node.net"]], "pycfhelpers.node.notificators module": [[4, "module-pycfhelpers.node.notificators"]], "pycfhelpers.node.types module": [[4, "module-pycfhelpers.node.types"]], "pycfhelpers.node.http package": [[5, "pycfhelpers-node-http-package"]], "pycfhelpers.node.http.simple module": [[5, "module-pycfhelpers.node.http.simple"]]}, "indexentries": {"contractprovider (class in pycfhelpers.contract)": [[2, "pycfhelpers.contract.ContractProvider"]], "gdbtable (class in pycfhelpers.globaldb)": [[2, "pycfhelpers.globaldb.GDBTable"]], "listcache (class in pycfhelpers.helpers)": [[2, "pycfhelpers.helpers.ListCache"]], "abi (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.abi"]], "add() (pycfhelpers.helpers.listcache method)": [[2, "pycfhelpers.helpers.ListCache.add"]], "all_events() (pycfhelpers.contract.contractprovider method)": [[2, "pycfhelpers.contract.ContractProvider.all_events"]], "all_events_from_last_try() (pycfhelpers.contract.contractprovider method)": [[2, "pycfhelpers.contract.ContractProvider.all_events_from_last_try"]], "capacity (pycfhelpers.helpers.listcache attribute)": [[2, "pycfhelpers.helpers.ListCache.capacity"]], "cfnet (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.cfnet"]], "chain_name (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.chain_name"]], "commision_wallet (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.commision_wallet"]], "contract (pycfhelpers.contract.contractprovider property)": [[2, "pycfhelpers.contract.ContractProvider.contract"]], "contract_address (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.contract_address"]], "data (pycfhelpers.helpers.listcache attribute)": [[2, "pycfhelpers.helpers.ListCache.data"]], "data() (pycfhelpers.helpers.listcache method)": [[2, "id0"]], "delete() (pycfhelpers.globaldb.gdbtable method)": [[2, "pycfhelpers.globaldb.GDBTable.delete"]], "event_from_tx_logs() (pycfhelpers.contract.contractprovider method)": [[2, "pycfhelpers.contract.ContractProvider.event_from_tx_logs"]], "event_keys_map (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.event_keys_map"]], "find_tx_out() (in module pycfhelpers.helpers)": [[2, "pycfhelpers.helpers.find_tx_out"]], "functions (pycfhelpers.contract.contractprovider property)": [[2, "pycfhelpers.contract.ContractProvider.functions"]], "get() (pycfhelpers.globaldb.gdbtable method)": [[2, "pycfhelpers.globaldb.GDBTable.get"]], "get_transaction() (pycfhelpers.contract.contractprovider method)": [[2, "pycfhelpers.contract.ContractProvider.get_transaction"]], "get_tsd_data() (in module pycfhelpers.helpers)": [[2, "pycfhelpers.helpers.get_tsd_data"]], "get_tx_items() (in module pycfhelpers.helpers)": [[2, "pycfhelpers.helpers.get_tx_items"]], "get_tx_outs() (in module pycfhelpers.helpers)": [[2, "pycfhelpers.helpers.get_tx_outs"]], "group_list() (pycfhelpers.globaldb.gdbtable method)": [[2, "pycfhelpers.globaldb.GDBTable.group_list"]], "init_tornado_http() (in module pycfhelpers.tornado_http)": [[2, "pycfhelpers.tornado_http.init_tornado_http"]], "json_dump() (in module pycfhelpers.helpers)": [[2, "pycfhelpers.helpers.json_dump"]], "json_load() (in module pycfhelpers.helpers)": [[2, "pycfhelpers.helpers.json_load"]], "module": [[2, "module-pycfhelpers"], [2, "module-pycfhelpers.contract"], [2, "module-pycfhelpers.globaldb"], [2, "module-pycfhelpers.helpers"], [2, "module-pycfhelpers.tornado_http"], [3, "module-pycfhelpers.common"], [3, "module-pycfhelpers.common.parsers"], [3, "module-pycfhelpers.common.types"], [4, "module-pycfhelpers.node"], [4, "module-pycfhelpers.node.address"], [4, "module-pycfhelpers.node.cli"], [4, "module-pycfhelpers.node.consensus"], [4, "module-pycfhelpers.node.crypto"], [4, "module-pycfhelpers.node.datums"], [4, "module-pycfhelpers.node.gdb"], [4, "module-pycfhelpers.node.items"], [4, "module-pycfhelpers.node.logging"], [4, "module-pycfhelpers.node.mappings"], [4, "module-pycfhelpers.node.math"], [4, "module-pycfhelpers.node.net"], [4, "module-pycfhelpers.node.notificators"], [4, "module-pycfhelpers.node.types"], [5, "module-pycfhelpers.node.http"], [5, "module-pycfhelpers.node.http.simple"]], "name (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.name"]], "native_token_index (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.native_token_index"]], "native_token_ticker (pycfhelpers.contract.contractprovider property)": [[2, "pycfhelpers.contract.ContractProvider.native_token_ticker"]], "net_by_name() (in module pycfhelpers.helpers)": [[2, "pycfhelpers.helpers.net_by_name"]], "network_id (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.network_id"]], "nft_contract (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.nft_contract"]], "nft_token (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.nft_token"]], "normalized_event_data() (pycfhelpers.contract.contractprovider method)": [[2, "pycfhelpers.contract.ContractProvider.normalized_event_data"]], "pair_token_index (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.pair_token_index"]], "pair_token_ticker (pycfhelpers.contract.contractprovider property)": [[2, "pycfhelpers.contract.ContractProvider.pair_token_ticker"]], "provider_urls (pycfhelpers.contract.contractprovider attribute)": [[2, "pycfhelpers.contract.ContractProvider.provider_urls"]], "pycfhelpers": [[2, "module-pycfhelpers"]], "pycfhelpers.contract": [[2, "module-pycfhelpers.contract"]], "pycfhelpers.globaldb": [[2, "module-pycfhelpers.globaldb"]], "pycfhelpers.helpers": [[2, "module-pycfhelpers.helpers"]], "pycfhelpers.tornado_http": [[2, "module-pycfhelpers.tornado_http"]], "reserves (pycfhelpers.contract.contractprovider property)": [[2, "pycfhelpers.contract.ContractProvider.reserves"]], "set() (pycfhelpers.globaldb.gdbtable method)": [[2, "pycfhelpers.globaldb.GDBTable.set"]], "supply (pycfhelpers.contract.contractprovider property)": [[2, "pycfhelpers.contract.ContractProvider.supply"]], "sync_group() (in module pycfhelpers.globaldb)": [[2, "pycfhelpers.globaldb.sync_group"]], "table (pycfhelpers.globaldb.gdbtable attribute)": [[2, "pycfhelpers.globaldb.GDBTable.table"]], "w3 (pycfhelpers.contract.contractprovider property)": [[2, "pycfhelpers.contract.ContractProvider.w3"]], "chaintypes (class in pycfhelpers.common.types)": [[3, "pycfhelpers.common.types.ChainTypes"]], "dap_chain_tx_out_cond_subtype_srv_pay (pycfhelpers.common.types.itemtypes attribute)": [[3, "id8"], [3, "pycfhelpers.common.types.ItemTypes.DAP_CHAIN_TX_OUT_COND_SUBTYPE_SRV_PAY"]], "dap_chain_tx_out_cond_subtype_srv_stake_lock (pycfhelpers.common.types.itemtypes attribute)": [[3, "id9"], [3, "pycfhelpers.common.types.ItemTypes.DAP_CHAIN_TX_OUT_COND_SUBTYPE_SRV_STAKE_LOCK"]], "dap_chain_tx_out_cond_subtype_srv_stake_pos_delegate (pycfhelpers.common.types.itemtypes attribute)": [[3, "id10"], [3, "pycfhelpers.common.types.ItemTypes.DAP_CHAIN_TX_OUT_COND_SUBTYPE_SRV_STAKE_POS_DELEGATE"]], "dap_chain_tx_out_cond_subtype_srv_xchange (pycfhelpers.common.types.itemtypes attribute)": [[3, "id11"], [3, "pycfhelpers.common.types.ItemTypes.DAP_CHAIN_TX_OUT_COND_SUBTYPE_SRV_XCHANGE"]], "datum_anchor (pycfhelpers.common.types.datumtypes attribute)": [[3, "id2"], [3, "pycfhelpers.common.types.DatumTypes.DATUM_ANCHOR"]], "datum_custom (pycfhelpers.common.types.datumtypes attribute)": [[3, "id3"], [3, "pycfhelpers.common.types.DatumTypes.DATUM_CUSTOM"]], "datum_decree (pycfhelpers.common.types.datumtypes attribute)": [[3, "id4"], [3, "pycfhelpers.common.types.DatumTypes.DATUM_DECREE"]], "datum_token_decl (pycfhelpers.common.types.datumtypes attribute)": [[3, "id5"], [3, "pycfhelpers.common.types.DatumTypes.DATUM_TOKEN_DECL"]], "datum_token_emission (pycfhelpers.common.types.datumtypes attribute)": [[3, "id6"], [3, "pycfhelpers.common.types.DatumTypes.DATUM_TOKEN_EMISSION"]], "datum_tx (pycfhelpers.common.types.datumtypes attribute)": [[3, "id7"], [3, "pycfhelpers.common.types.DatumTypes.DATUM_TX"]], "datumtypes (class in pycfhelpers.common.types)": [[3, "pycfhelpers.common.types.DatumTypes"]], "itemtypes (class in pycfhelpers.common.types)": [[3, "pycfhelpers.common.types.ItemTypes"]], "tx_item_type_in (pycfhelpers.common.types.itemtypes attribute)": [[3, "id12"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_IN"]], "tx_item_type_in_cond (pycfhelpers.common.types.itemtypes attribute)": [[3, "id13"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_IN_COND"]], "tx_item_type_in_ems (pycfhelpers.common.types.itemtypes attribute)": [[3, "id14"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_IN_EMS"]], "tx_item_type_out (pycfhelpers.common.types.itemtypes attribute)": [[3, "id15"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_OUT"]], "tx_item_type_out_cond (pycfhelpers.common.types.itemtypes attribute)": [[3, "id16"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_OUT_COND"]], "tx_item_type_out_ext (pycfhelpers.common.types.itemtypes attribute)": [[3, "id17"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_OUT_EXT"]], "tx_item_type_pkey (pycfhelpers.common.types.itemtypes attribute)": [[3, "id18"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_PKEY"]], "tx_item_type_receipt (pycfhelpers.common.types.itemtypes attribute)": [[3, "id19"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_RECEIPT"]], "tx_item_type_sig (pycfhelpers.common.types.itemtypes attribute)": [[3, "id20"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_SIG"]], "tx_item_type_tsd (pycfhelpers.common.types.itemtypes attribute)": [[3, "id21"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_TSD"]], "tx_item_type_vote (pycfhelpers.common.types.itemtypes attribute)": [[3, "id22"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_VOTE"]], "tx_item_type_voting (pycfhelpers.common.types.itemtypes attribute)": [[3, "id23"], [3, "pycfhelpers.common.types.ItemTypes.TX_ITEM_TYPE_VOTING"]], "_generate_next_value_() (pycfhelpers.common.types.chaintypes method)": [[3, "pycfhelpers.common.types.ChainTypes._generate_next_value_"]], "_generate_next_value_() (pycfhelpers.common.types.datumtypes method)": [[3, "pycfhelpers.common.types.DatumTypes._generate_next_value_"]], "_generate_next_value_() (pycfhelpers.common.types.itemtypes method)": [[3, "pycfhelpers.common.types.ItemTypes._generate_next_value_"]], "dag_poa (pycfhelpers.common.types.chaintypes attribute)": [[3, "id0"], [3, "pycfhelpers.common.types.ChainTypes.dag_poa"]], "esbocs (pycfhelpers.common.types.chaintypes attribute)": [[3, "id1"], [3, "pycfhelpers.common.types.ChainTypes.esbocs"]], "parse_cf_v1_address() (in module pycfhelpers.common.parsers)": [[3, "pycfhelpers.common.parsers.parse_cf_v1_address"]], "pycfhelpers.common": [[3, "module-pycfhelpers.common"]], "pycfhelpers.common.parsers": [[3, "module-pycfhelpers.common.parsers"]], "pycfhelpers.common.types": [[3, "module-pycfhelpers.common.types"]], "cfblock (class in pycfhelpers.node.consensus)": [[4, "pycfhelpers.node.consensus.CFBlock"]], "cfcertificate (class in pycfhelpers.node.crypto)": [[4, "pycfhelpers.node.crypto.CFCertificate"]], "cfchain (class in pycfhelpers.node.net)": [[4, "pycfhelpers.node.net.CFChain"]], "cfclicommand (class in pycfhelpers.node.cli)": [[4, "pycfhelpers.node.cli.CFCliCommand"]], "cfdatum (class in pycfhelpers.node.datums)": [[4, "pycfhelpers.node.datums.CFDatum"]], "cfdatumanchor (class in pycfhelpers.node.datums)": [[4, "pycfhelpers.node.datums.CFDatumAnchor"]], "cfdatumcustom (class in pycfhelpers.node.datums)": [[4, "pycfhelpers.node.datums.CFDatumCustom"]], "cfdatumdecree (class in pycfhelpers.node.datums)": [[4, "pycfhelpers.node.datums.CFDatumDecree"]], "cfdatumemission (class in pycfhelpers.node.datums)": [[4, "pycfhelpers.node.datums.CFDatumEmission"]], "cfdatumtx (class in pycfhelpers.node.datums)": [[4, "pycfhelpers.node.datums.CFDatumTX"]], "cfdatumtoken (class in pycfhelpers.node.datums)": [[4, "pycfhelpers.node.datums.CFDatumToken"]], "cfevent (class in pycfhelpers.node.consensus)": [[4, "pycfhelpers.node.consensus.CFEvent"]], "cfitem (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFItem"]], "cfitemmapper (class in pycfhelpers.node.mappings)": [[4, "pycfhelpers.node.mappings.CFItemMapper"]], "cfkey (class in pycfhelpers.node.crypto)": [[4, "pycfhelpers.node.crypto.CFKey"]], "cfledger (class in pycfhelpers.node.net)": [[4, "pycfhelpers.node.net.CFLedger"]], "cfledgercacheresponse (class in pycfhelpers.node.types)": [[4, "pycfhelpers.node.types.CFLedgerCacheResponse"]], "cflog (class in pycfhelpers.node.logging)": [[4, "pycfhelpers.node.logging.CFLog"]], "cfmempool (class in pycfhelpers.node.net)": [[4, "pycfhelpers.node.net.CFMempool"]], "cfnet (class in pycfhelpers.node.net)": [[4, "pycfhelpers.node.net.CFNet"]], "cfnetid (class in pycfhelpers.node.net)": [[4, "pycfhelpers.node.net.CFNetID"]], "cfnetstate (class in pycfhelpers.node.types)": [[4, "pycfhelpers.node.types.CFNetState"]], "cfnets (class in pycfhelpers.node.notificators)": [[4, "pycfhelpers.node.notificators.CFNets"]], "cfpkey (class in pycfhelpers.node.crypto)": [[4, "pycfhelpers.node.crypto.CFPkey"]], "cfsign (class in pycfhelpers.node.crypto)": [[4, "pycfhelpers.node.crypto.CFSign"]], "cfsubdatum (class in pycfhelpers.node.datums)": [[4, "pycfhelpers.node.datums.CFSubDatum"]], "cfsubdatumbuilder (class in pycfhelpers.node.mappings)": [[4, "pycfhelpers.node.mappings.CFSubDatumBuilder"]], "cftxin (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxIn"]], "cftxincond (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxInCond"]], "cftxout (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxOut"]], "cftxoutcond (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxOutCond"]], "cftxoutcondsubtypesrvpay (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxOutCondSubtypeSrvPay"]], "cftxoutcondsubtypesrvstakelock (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxOutCondSubtypeSrvStakeLock"]], "cftxoutcondsubtypesrvstakeposdelegate (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxOutCondSubtypeSrvStakePosDelegate"]], "cftxoutcondsubtypesrvxchange (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxOutCondSubtypeSrvXchange"]], "cftxoutext (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxOutExt"]], "cftxpkey (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxPkey"]], "cftxreceipt (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxReceipt"]], "cftxsig (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxSig"]], "cftxtsd (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxTSD"]], "cftxtoken (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxToken"]], "cftxvote (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxVote"]], "cftxvoting (class in pycfhelpers.node.items)": [[4, "pycfhelpers.node.items.CFTxVoting"]], "cfwalletaddress (class in pycfhelpers.node.address)": [[4, "pycfhelpers.node.address.CFWalletAddress"]], "clicallback (class in pycfhelpers.node.cli)": [[4, "pycfhelpers.node.cli.CliCallback"]], "dap_ledger_permission_check_failed (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id1"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_PERMISSION_CHECK_FAILED"]], "dap_ledger_tx_already_cached (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id2"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_ALREADY_CACHED"]], "dap_ledger_tx_check_emission_not_found (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id3"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_EMISSION_NOT_FOUND"]], "dap_ledger_tx_check_invalid_tx_sign (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id4"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_INVALID_TX_SIGN"]], "dap_ledger_tx_check_invalid_tx_size (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id5"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_INVALID_TX_SIZE"]], "dap_ledger_tx_check_in_ems_already_used (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id6"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_IN_EMS_ALREADY_USED"]], "dap_ledger_tx_check_mult256_overflow_ems_locked_x_rate (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id7"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_MULT256_OVERFLOW_EMS_LOCKED_X_RATE"]], "dap_ledger_tx_check_no_out_ext_for_girdled_in_ems (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id8"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_NO_OUT_EXT_FOR_GIRDLED_IN_EMS"]], "dap_ledger_tx_check_no_out_items_for_base_tx (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id9"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_NO_OUT_ITEMS_FOR_BASE_TX"]], "dap_ledger_tx_check_no_verificator_set (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id10"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_NO_VERIFICATOR_SET"]], "dap_ledger_tx_check_null_tx (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id11"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_NULL_TX"]], "dap_ledger_tx_check_ok (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id12"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_OK"]], "dap_ledger_tx_check_out_item_already_used (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id13"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_OUT_ITEM_ALREADY_USED"]], "dap_ledger_tx_check_pkey_hashes_dont_match (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id14"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_PKEY_HASHES_DONT_MATCH"]], "dap_ledger_tx_check_prev_out_already_used_in_current_tx (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id15"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_PREV_OUT_ALREADY_USED_IN_CURRENT_TX"]], "dap_ledger_tx_check_prev_out_item_not_found (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id16"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_PREV_OUT_ITEM_NOT_FOUND"]], "dap_ledger_tx_check_prev_ticker_not_found (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id17"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_PREV_TICKER_NOT_FOUND"]], "dap_ledger_tx_check_prev_token_not_found (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id18"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_PREV_TOKEN_NOT_FOUND"]], "dap_ledger_tx_check_prev_tx_not_found (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id19"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_PREV_TX_NOT_FOUND"]], "dap_ledger_tx_check_reward_item_already_used (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id20"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_REWARD_ITEM_ALREADY_USED"]], "dap_ledger_tx_check_reward_item_illegal (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id21"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_REWARD_ITEM_ILLEGAL"]], "dap_ledger_tx_check_stake_lock_invalid_token (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id22"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_STAKE_LOCK_INVALID_TOKEN"]], "dap_ledger_tx_check_stake_lock_in_ems_already_used (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id23"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_STAKE_LOCK_IN_EMS_ALREADY_USED"]], "dap_ledger_tx_check_stake_lock_no_out_cond_for_in_ems (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id24"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_STAKE_LOCK_NO_OUT_COND_FOR_IN_EMS"]], "dap_ledger_tx_check_stake_lock_other_ticker_expected (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id25"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_STAKE_LOCK_OTHER_TICKER_EXPECTED"]], "dap_ledger_tx_check_stake_lock_ticker_not_found (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id26"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_STAKE_LOCK_TICKER_NOT_FOUND"]], "dap_ledger_tx_check_stake_lock_unexpected_value (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id27"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_STAKE_LOCK_UNEXPECTED_VALUE"]], "dap_ledger_tx_check_sum_ins_not_equal_sum_outs (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id28"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_SUM_INS_NOT_EQUAL_SUM_OUTS"]], "dap_ledger_tx_check_ticker_not_found (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id29"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_TICKER_NOT_FOUND"]], "dap_ledger_tx_check_token_ems_value_exeeds_cur_supply (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id30"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_TOKEN_EMS_VALUE_EXEEDS_CUR_SUPPLY"]], "dap_ledger_tx_check_tx_no_valid_inputs (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id31"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_TX_NO_VALID_INPUTS"]], "dap_ledger_tx_check_verificator_check_failure (pycfhelpers.node.types.cfledgercacheresponse attribute)": [[4, "id32"], [4, "pycfhelpers.node.types.CFLedgerCacheResponse.DAP_LEDGER_TX_CHECK_VERIFICATOR_CHECK_FAILURE"]], "gdbgroup (class in pycfhelpers.node.gdb)": [[4, "pycfhelpers.node.gdb.GDBGroup"]], "gdbgroupbase (class in pycfhelpers.node.gdb)": [[4, "pycfhelpers.node.gdb.GDBGroupBase"]], "gdbgroupsign (class in pycfhelpers.node.gdb)": [[4, "pycfhelpers.node.gdb.GDBGroupSign"]], "itemmeta (in module pycfhelpers.node.mappings)": [[4, "pycfhelpers.node.mappings.ItemMeta"]], "mempoolcallback (class in pycfhelpers.node.net)": [[4, "pycfhelpers.node.net.MempoolCallback"]], "net_state_offline (pycfhelpers.node.types.cfnetstate attribute)": [[4, "id33"], [4, "pycfhelpers.node.types.CFNetState.NET_STATE_OFFLINE"]], "net_state_online (pycfhelpers.node.types.cfnetstate attribute)": [[4, "id34"], [4, "pycfhelpers.node.types.CFNetState.NET_STATE_ONLINE"]], "netfee (class in pycfhelpers.node.net)": [[4, "pycfhelpers.node.net.NetFee"]], "replyobject (class in pycfhelpers.node.cli)": [[4, "pycfhelpers.node.cli.ReplyObject"]], "serializableobject (class in pycfhelpers.node.gdb)": [[4, "pycfhelpers.node.gdb.SerializableObject"]], "subdatummeta (in module pycfhelpers.node.mappings)": [[4, "pycfhelpers.node.mappings.SubDatumMeta"]], "tsd (class in pycfhelpers.node.types)": [[4, "pycfhelpers.node.types.TSD"]], "type_address (pycfhelpers.node.types.tsd attribute)": [[4, "id35"], [4, "pycfhelpers.node.types.TSD.TYPE_ADDRESS"]], "type_base_tx_hash (pycfhelpers.node.types.tsd attribute)": [[4, "id36"], [4, "pycfhelpers.node.types.TSD.TYPE_BASE_TX_HASH"]], "type_block_num (pycfhelpers.node.types.tsd attribute)": [[4, "id37"], [4, "pycfhelpers.node.types.TSD.TYPE_BLOCK_NUM"]], "type_contract (pycfhelpers.node.types.tsd attribute)": [[4, "id38"], [4, "pycfhelpers.node.types.TSD.TYPE_CONTRACT"]], "type_data (pycfhelpers.node.types.tsd attribute)": [[4, "id39"], [4, "pycfhelpers.node.types.TSD.TYPE_DATA"]], "type_emission_center_uid (pycfhelpers.node.types.tsd attribute)": [[4, "id40"], [4, "pycfhelpers.node.types.TSD.TYPE_EMISSION_CENTER_UID"]], "type_emission_center_ver (pycfhelpers.node.types.tsd attribute)": [[4, "id41"], [4, "pycfhelpers.node.types.TSD.TYPE_EMISSION_CENTER_VER"]], "type_net_id (pycfhelpers.node.types.tsd attribute)": [[4, "id42"], [4, "pycfhelpers.node.types.TSD.TYPE_NET_ID"]], "type_outer_tx_hash (pycfhelpers.node.types.tsd attribute)": [[4, "id43"], [4, "pycfhelpers.node.types.TSD.TYPE_OUTER_TX_HASH"]], "type_sender (pycfhelpers.node.types.tsd attribute)": [[4, "id44"], [4, "pycfhelpers.node.types.TSD.TYPE_SENDER"]], "type_signaturs (pycfhelpers.node.types.tsd attribute)": [[4, "id45"], [4, "pycfhelpers.node.types.TSD.TYPE_SIGNATURS"]], "type_source (pycfhelpers.node.types.tsd attribute)": [[4, "id46"], [4, "pycfhelpers.node.types.TSD.TYPE_SOURCE"]], "type_source_subtype (pycfhelpers.node.types.tsd attribute)": [[4, "id47"], [4, "pycfhelpers.node.types.TSD.TYPE_SOURCE_SUBTYPE"]], "type_timestamp (pycfhelpers.node.types.tsd attribute)": [[4, "id48"], [4, "pycfhelpers.node.types.TSD.TYPE_TIMESTAMP"]], "type_token_address (pycfhelpers.node.types.tsd attribute)": [[4, "id49"], [4, "pycfhelpers.node.types.TSD.TYPE_TOKEN_ADDRESS"]], "type_token_sym (pycfhelpers.node.types.tsd attribute)": [[4, "id50"], [4, "pycfhelpers.node.types.TSD.TYPE_TOKEN_SYM"]], "type_unique_id (pycfhelpers.node.types.tsd attribute)": [[4, "id51"], [4, "pycfhelpers.node.types.TSD.TYPE_UNIQUE_ID"]], "type_unknown (pycfhelpers.node.types.tsd attribute)": [[4, "id52"], [4, "pycfhelpers.node.types.TSD.TYPE_UNKNOWN"]], "type_value (pycfhelpers.node.types.tsd attribute)": [[4, "id53"], [4, "pycfhelpers.node.types.TSD.TYPE_VALUE"]], "__call__() (pycfhelpers.node.cli.clicallback method)": [[4, "pycfhelpers.node.cli.CliCallback.__call__"]], "__call__() (pycfhelpers.node.net.mempoolcallback method)": [[4, "pycfhelpers.node.net.MempoolCallback.__call__"]], "__repr__() (pycfhelpers.node.datums.cfdatum method)": [[4, "pycfhelpers.node.datums.CFDatum.__repr__"]], "__repr__() (pycfhelpers.node.datums.cfdatumemission method)": [[4, "pycfhelpers.node.datums.CFDatumEmission.__repr__"]], "_from_bytes() (pycfhelpers.node.crypto.cfpkey static method)": [[4, "pycfhelpers.node.crypto.CFPkey._from_bytes"]], "_generate_next_value_() (pycfhelpers.node.types.cfledgercacheresponse method)": [[4, "pycfhelpers.node.types.CFLedgerCacheResponse._generate_next_value_"]], "_generate_next_value_() (pycfhelpers.node.types.cfnetstate method)": [[4, "pycfhelpers.node.types.CFNetState._generate_next_value_"]], "_logger (pycfhelpers.node.logging.cflog attribute)": [[4, "pycfhelpers.node.logging.CFLog._logger"]], "_origin_chain (pycfhelpers.node.net.cfchain attribute)": [[4, "pycfhelpers.node.net.CFChain._origin_chain"]], "_origin_ledger (pycfhelpers.node.net.cfledger attribute)": [[4, "pycfhelpers.node.net.CFLedger._origin_ledger"]], "_origin_net (pycfhelpers.node.net.cfnet attribute)": [[4, "pycfhelpers.node.net.CFNet._origin_net"]], "_origin_net_id (pycfhelpers.node.net.cfnetid attribute)": [[4, "pycfhelpers.node.net.CFNetID._origin_net_id"]], "_original_addr (pycfhelpers.node.address.cfwalletaddress attribute)": [[4, "pycfhelpers.node.address.CFWalletAddress._original_addr"]], "_to_bytes() (pycfhelpers.node.crypto.cfpkey method)": [[4, "pycfhelpers.node.crypto.CFPkey._to_bytes"]], "accepted (pycfhelpers.node.datums.cfdatumtx attribute)": [[4, "pycfhelpers.node.datums.CFDatumTX.accepted"]], "active_nets() (pycfhelpers.node.net.cfnet static method)": [[4, "pycfhelpers.node.net.CFNet.active_nets"]], "add_sign() (pycfhelpers.node.datums.cfdatumemission method)": [[4, "pycfhelpers.node.datums.CFDatumEmission.add_sign"]], "add_to_white_list() (pycfhelpers.node.gdb.gdbgroupbase static method)": [[4, "pycfhelpers.node.gdb.GDBGroupBase.add_to_white_list"]], "address (pycfhelpers.node.crypto.cfsign attribute)": [[4, "pycfhelpers.node.crypto.CFSign.address"]], "address (pycfhelpers.node.datums.cfdatumemission attribute)": [[4, "pycfhelpers.node.datums.CFDatumEmission.address"]], "address (pycfhelpers.node.items.cftxout attribute)": [[4, "pycfhelpers.node.items.CFTxOut.address"]], "address (pycfhelpers.node.items.cftxoutext attribute)": [[4, "pycfhelpers.node.items.CFTxOutExt.address"]], "address (pycfhelpers.node.net.cfnet attribute)": [[4, "pycfhelpers.node.net.CFNet.address"]], "atom (pycfhelpers.node.datums.cfdatum attribute)": [[4, "pycfhelpers.node.datums.CFDatum.atom"]], "atom_notificator() (pycfhelpers.node.notificators.cfnets method)": [[4, "pycfhelpers.node.notificators.CFNets.atom_notificator"]], "att() (pycfhelpers.node.logging.cflog method)": [[4, "pycfhelpers.node.logging.CFLog.att"]], "build() (pycfhelpers.node.mappings.cfitemmapper static method)": [[4, "pycfhelpers.node.mappings.CFItemMapper.build"]], "build() (pycfhelpers.node.mappings.cfsubdatumbuilder method)": [[4, "pycfhelpers.node.mappings.CFSubDatumBuilder.build"]], "calc_address_balances() (pycfhelpers.node.net.cfledger method)": [[4, "pycfhelpers.node.net.CFLedger.calc_address_balances"]], "callback (pycfhelpers.node.cli.cfclicommand attribute)": [[4, "pycfhelpers.node.cli.CFCliCommand.callback"]], "cell_id (pycfhelpers.node.consensus.cfblock attribute)": [[4, "pycfhelpers.node.consensus.CFBlock.cell_id"]], "cell_id (pycfhelpers.node.consensus.cfevent attribute)": [[4, "pycfhelpers.node.consensus.CFEvent.cell_id"]], "chain (pycfhelpers.node.consensus.cfblock attribute)": [[4, "pycfhelpers.node.consensus.CFBlock.chain"]], "chain (pycfhelpers.node.consensus.cfevent attribute)": [[4, "pycfhelpers.node.consensus.CFEvent.chain"]], "chain (pycfhelpers.node.net.cfmempool attribute)": [[4, "pycfhelpers.node.net.CFMempool.chain"]], "chainid (pycfhelpers.node.consensus.cfblock attribute)": [[4, "pycfhelpers.node.consensus.CFBlock.chainid"]], "chains (pycfhelpers.node.net.cfnet property)": [[4, "pycfhelpers.node.net.CFNet.chains"]], "change_state() (pycfhelpers.node.net.cfnet method)": [[4, "pycfhelpers.node.net.CFNet.change_state"]], "command (pycfhelpers.node.cli.cfclicommand attribute)": [[4, "pycfhelpers.node.cli.CFCliCommand.command"]], "created_at (pycfhelpers.node.consensus.cfblock attribute)": [[4, "pycfhelpers.node.consensus.CFBlock.created_at"]], "created_at (pycfhelpers.node.consensus.cfevent attribute)": [[4, "pycfhelpers.node.consensus.CFEvent.created_at"]], "created_at (pycfhelpers.node.datums.cfdatum attribute)": [[4, "pycfhelpers.node.datums.CFDatum.created_at"]], "created_at (pycfhelpers.node.datums.cfdatumanchor attribute)": [[4, "pycfhelpers.node.datums.CFDatumAnchor.created_at"]], "created_at (pycfhelpers.node.datums.cfdatumdecree attribute)": [[4, "pycfhelpers.node.datums.CFDatumDecree.created_at"]], "created_at (pycfhelpers.node.datums.cfdatumtx attribute)": [[4, "pycfhelpers.node.datums.CFDatumTX.created_at"]], "critical() (pycfhelpers.node.logging.cflog method)": [[4, "pycfhelpers.node.logging.CFLog.critical"]], "dap() (pycfhelpers.node.logging.cflog method)": [[4, "pycfhelpers.node.logging.CFLog.dap"]], "data (pycfhelpers.node.datums.cfdatumcustom attribute)": [[4, "pycfhelpers.node.datums.CFDatumCustom.data"]], "data (pycfhelpers.node.datums.cfdatumemission attribute)": [[4, "pycfhelpers.node.datums.CFDatumEmission.data"]], "data (pycfhelpers.node.datums.cfdatumtoken attribute)": [[4, "pycfhelpers.node.datums.CFDatumToken.data"]], "debug() (pycfhelpers.node.logging.cflog method)": [[4, "pycfhelpers.node.logging.CFLog.debug"]], "delete() (pycfhelpers.node.crypto.cfcertificate method)": [[4, "pycfhelpers.node.crypto.CFCertificate.delete"]], "delete() (pycfhelpers.node.gdb.gdbgroup method)": [[4, "pycfhelpers.node.gdb.GDBGroup.delete"]], "delete() (pycfhelpers.node.gdb.gdbgroupbase method)": [[4, "pycfhelpers.node.gdb.GDBGroupBase.delete"]], "delete() (pycfhelpers.node.gdb.gdbgroupsign method)": [[4, "pycfhelpers.node.gdb.GDBGroupSign.delete"]], "deserialize() (pycfhelpers.node.crypto.cfsign static method)": [[4, "pycfhelpers.node.crypto.CFSign.deserialize"]], "deserialize() (pycfhelpers.node.gdb.serializableobject method)": [[4, "pycfhelpers.node.gdb.SerializableObject.deserialize"]], "emission_chain_id (pycfhelpers.node.items.cftxtoken attribute)": [[4, "pycfhelpers.node.items.CFTxToken.emission_chain_id"]], "emission_hash (pycfhelpers.node.items.cftxtoken attribute)": [[4, "pycfhelpers.node.items.CFTxToken.emission_hash"]], "error() (pycfhelpers.node.logging.cflog method)": [[4, "pycfhelpers.node.logging.CFLog.error"]], "expires (pycfhelpers.node.items.cftxoutcond attribute)": [[4, "pycfhelpers.node.items.CFTxOutCond.expires"]], "fee_data (pycfhelpers.node.net.cfnet attribute)": [[4, "pycfhelpers.node.net.CFNet.fee_data"]], "gdbsync_notificator() (pycfhelpers.node.notificators.cfnets method)": [[4, "pycfhelpers.node.notificators.CFNets.gdbsync_notificator"]], "get() (pycfhelpers.node.gdb.gdbgroup method)": [[4, "pycfhelpers.node.gdb.GDBGroup.get"]], "get() (pycfhelpers.node.gdb.gdbgroupbase method)": [[4, "pycfhelpers.node.gdb.GDBGroupBase.get"]], "get() (pycfhelpers.node.gdb.gdbgroupsign method)": [[4, "pycfhelpers.node.gdb.GDBGroupSign.get"]], "get_atoms() (pycfhelpers.node.net.cfchain method)": [[4, "pycfhelpers.node.net.CFChain.get_atoms"]], "get_datum_from_bytes() (pycfhelpers.node.net.cfmempool method)": [[4, "pycfhelpers.node.net.CFMempool.get_datum_from_bytes"]], "get_datums() (pycfhelpers.node.consensus.cfblock method)": [[4, "pycfhelpers.node.consensus.CFBlock.get_datums"]], "get_datums() (pycfhelpers.node.consensus.cfevent method)": [[4, "pycfhelpers.node.consensus.CFEvent.get_datums"]], "get_datums() (pycfhelpers.node.net.cfchain method)": [[4, "pycfhelpers.node.net.CFChain.get_datums"]], "get_datums() (pycfhelpers.node.net.cfmempool method)": [[4, "pycfhelpers.node.net.CFMempool.get_datums"]], "get_emission() (pycfhelpers.node.net.cfledger method)": [[4, "pycfhelpers.node.net.CFLedger.get_emission"]], "get_items() (pycfhelpers.node.datums.cfdatumtx method)": [[4, "pycfhelpers.node.datums.CFDatumTX.get_items"]], "get_ledger() (pycfhelpers.node.net.cfnet method)": [[4, "pycfhelpers.node.net.CFNet.get_ledger"]], "get_mempool() (pycfhelpers.node.net.cfchain method)": [[4, "pycfhelpers.node.net.CFChain.get_mempool"]], "get_sub_datum() (pycfhelpers.node.datums.cfdatum method)": [[4, "pycfhelpers.node.datums.CFDatum.get_sub_datum"]], "get_transactions() (pycfhelpers.node.net.cfchain method)": [[4, "pycfhelpers.node.net.CFChain.get_transactions"]], "get_tx_ledger_rc() (pycfhelpers.node.net.cfledger method)": [[4, "pycfhelpers.node.net.CFLedger.get_tx_ledger_rc"]], "get_tx_ticker() (pycfhelpers.node.net.cfledger method)": [[4, "pycfhelpers.node.net.CFLedger.get_tx_ticker"]], "group (pycfhelpers.node.gdb.gdbgroup attribute)": [[4, "pycfhelpers.node.gdb.GDBGroup.group"]], "group (pycfhelpers.node.gdb.gdbgroupbase attribute)": [[4, "pycfhelpers.node.gdb.GDBGroupBase.group"]], "group (pycfhelpers.node.gdb.gdbgroupsign attribute)": [[4, "pycfhelpers.node.gdb.GDBGroupSign.group"]], "group_alias (pycfhelpers.node.net.cfnet property)": [[4, "pycfhelpers.node.net.CFNet.group_alias"]], "group_list() (pycfhelpers.node.gdb.gdbgroup method)": [[4, "pycfhelpers.node.gdb.GDBGroup.group_list"]], "group_list() (pycfhelpers.node.gdb.gdbgroupbase method)": [[4, "pycfhelpers.node.gdb.GDBGroupBase.group_list"]], "group_list() (pycfhelpers.node.gdb.gdbgroupsign method)": [[4, "pycfhelpers.node.gdb.GDBGroupSign.group_list"]], "has_emission() (pycfhelpers.node.net.cfledger method)": [[4, "pycfhelpers.node.net.CFLedger.has_emission"]], "hash (pycfhelpers.node.consensus.cfblock attribute)": [[4, "pycfhelpers.node.consensus.CFBlock.hash"]], "hash (pycfhelpers.node.consensus.cfevent attribute)": [[4, "pycfhelpers.node.consensus.CFEvent.hash"]], "hash (pycfhelpers.node.crypto.cfpkey attribute)": [[4, "pycfhelpers.node.crypto.CFPkey.hash"]], "hash (pycfhelpers.node.datums.cfdatum attribute)": [[4, "pycfhelpers.node.datums.CFDatum.hash"]], "hash (pycfhelpers.node.datums.cfdatumanchor attribute)": [[4, "pycfhelpers.node.datums.CFDatumAnchor.hash"]], "hash (pycfhelpers.node.datums.cfdatumcustom attribute)": [[4, "pycfhelpers.node.datums.CFDatumCustom.hash"]], "hash (pycfhelpers.node.datums.cfdatumdecree attribute)": [[4, "pycfhelpers.node.datums.CFDatumDecree.hash"]], "hash (pycfhelpers.node.datums.cfdatumemission attribute)": [[4, "pycfhelpers.node.datums.CFDatumEmission.hash"]], "hash (pycfhelpers.node.datums.cfdatumtoken attribute)": [[4, "pycfhelpers.node.datums.CFDatumToken.hash"]], "hash (pycfhelpers.node.datums.cfsubdatum attribute)": [[4, "pycfhelpers.node.datums.CFSubDatum.hash"]], "hashes (pycfhelpers.node.consensus.cfevent attribute)": [[4, "pycfhelpers.node.consensus.CFEvent.hashes"]], "help_text (pycfhelpers.node.cli.cfclicommand attribute)": [[4, "pycfhelpers.node.cli.CFCliCommand.help_text"]], "id (pycfhelpers.node.net.cfnet property)": [[4, "pycfhelpers.node.net.CFNet.id"]], "info() (pycfhelpers.node.logging.cflog method)": [[4, "pycfhelpers.node.logging.CFLog.info"]], "items (pycfhelpers.node.datums.cfdatumtx property)": [[4, "pycfhelpers.node.datums.CFDatumTX.items"]], "ledger_rc (pycfhelpers.node.datums.cfdatumtx attribute)": [[4, "pycfhelpers.node.datums.CFDatumTX.ledger_rc"]], "ledger_tx_notificator() (pycfhelpers.node.notificators.cfnets method)": [[4, "pycfhelpers.node.notificators.CFNets.ledger_tx_notificator"]], "long (pycfhelpers.node.net.cfnetid property)": [[4, "pycfhelpers.node.net.CFNetID.long"]], "main (pycfhelpers.node.net.cfnet attribute)": [[4, "pycfhelpers.node.net.CFNet.main"]], "mempool_notificator() (pycfhelpers.node.notificators.cfnets method)": [[4, "pycfhelpers.node.notificators.CFNets.mempool_notificator"]], "message() (pycfhelpers.node.logging.cflog method)": [[4, "pycfhelpers.node.logging.CFLog.message"]], "meta (pycfhelpers.node.consensus.cfblock attribute)": [[4, "pycfhelpers.node.consensus.CFBlock.meta"]], "name (pycfhelpers.node.net.cfchain attribute)": [[4, "pycfhelpers.node.net.CFChain.name"]], "name (pycfhelpers.node.net.cfnet attribute)": [[4, "pycfhelpers.node.net.CFNet.name"]], "native_ticker (pycfhelpers.node.net.netfee attribute)": [[4, "pycfhelpers.node.net.NetFee.native_ticker"]], "net (pycfhelpers.node.crypto.cfsign attribute)": [[4, "pycfhelpers.node.crypto.CFSign.net"]], "net (pycfhelpers.node.datums.cfdatum attribute)": [[4, "pycfhelpers.node.datums.CFDatum.net"]], "net (pycfhelpers.node.datums.cfsubdatum property)": [[4, "pycfhelpers.node.datums.CFSubDatum.net"]], "net (pycfhelpers.node.items.cfitem attribute)": [[4, "pycfhelpers.node.items.CFItem.net"]], "net (pycfhelpers.node.net.cfchain attribute)": [[4, "pycfhelpers.node.net.CFChain.net"]], "net (pycfhelpers.node.net.cfledger attribute)": [[4, "pycfhelpers.node.net.CFLedger.net"]], "net (pycfhelpers.node.net.netfee attribute)": [[4, "pycfhelpers.node.net.NetFee.net"]], "net_id() (pycfhelpers.node.address.cfwalletaddress method)": [[4, "pycfhelpers.node.address.CFWalletAddress.net_id"]], "net_id_from_wallet_str() (pycfhelpers.node.net.cfnet static method)": [[4, "pycfhelpers.node.net.CFNet.net_id_from_wallet_str"]], "nets (pycfhelpers.node.notificators.cfnets attribute)": [[4, "pycfhelpers.node.notificators.CFNets.nets"]], "notice() (pycfhelpers.node.logging.cflog method)": [[4, "pycfhelpers.node.logging.CFLog.notice"]], "parser (pycfhelpers.node.cli.cfclicommand attribute)": [[4, "pycfhelpers.node.cli.CFCliCommand.parser"]], "pkey (pycfhelpers.node.crypto.cfcertificate attribute)": [[4, "pycfhelpers.node.crypto.CFCertificate.pkey"]], "pkey (pycfhelpers.node.crypto.cfsign attribute)": [[4, "pycfhelpers.node.crypto.CFSign.pkey"]], "pkey_hash (pycfhelpers.node.crypto.cfsign attribute)": [[4, "pycfhelpers.node.crypto.CFSign.pkey_hash"]], "prev_hash (pycfhelpers.node.items.cftxin attribute)": [[4, "pycfhelpers.node.items.CFTxIn.prev_hash"]], "prev_idx (pycfhelpers.node.items.cftxin attribute)": [[4, "pycfhelpers.node.items.CFTxIn.prev_idx"]], "private_key (pycfhelpers.node.crypto.cfcertificate attribute)": [[4, "pycfhelpers.node.crypto.CFCertificate.private_key"]], "private_key (pycfhelpers.node.crypto.cfcertificate property)": [[4, "id0"]], "public_key (pycfhelpers.node.crypto.cfcertificate property)": [[4, "pycfhelpers.node.crypto.CFCertificate.public_key"]], "pycfhelpers.node": [[4, "module-pycfhelpers.node"]], "pycfhelpers.node.address": [[4, "module-pycfhelpers.node.address"]], "pycfhelpers.node.cli": [[4, "module-pycfhelpers.node.cli"]], "pycfhelpers.node.consensus": [[4, "module-pycfhelpers.node.consensus"]], "pycfhelpers.node.crypto": [[4, "module-pycfhelpers.node.crypto"]], "pycfhelpers.node.datums": [[4, "module-pycfhelpers.node.datums"]], "pycfhelpers.node.gdb": [[4, "module-pycfhelpers.node.gdb"]], "pycfhelpers.node.items": [[4, "module-pycfhelpers.node.items"]], "pycfhelpers.node.logging": [[4, "module-pycfhelpers.node.logging"]], "pycfhelpers.node.mappings": [[4, "module-pycfhelpers.node.mappings"]], "pycfhelpers.node.math": [[4, "module-pycfhelpers.node.math"]], "pycfhelpers.node.net": [[4, "module-pycfhelpers.node.net"]], "pycfhelpers.node.notificators": [[4, "module-pycfhelpers.node.notificators"]], "pycfhelpers.node.types": [[4, "module-pycfhelpers.node.types"]], "reason() (pycfhelpers.node.net.cfmempool method)": [[4, "pycfhelpers.node.net.CFMempool.reason"]], "register() (pycfhelpers.node.cli.cfclicommand method)": [[4, "pycfhelpers.node.cli.CFCliCommand.register"]], "register_atom_notification_callback() (pycfhelpers.node.net.cfchain method)": [[4, "pycfhelpers.node.net.CFChain.register_atom_notification_callback"]], "register_gdbsync_notification_callback() (pycfhelpers.node.net.cfnet method)": [[4, "pycfhelpers.node.net.CFNet.register_gdbsync_notification_callback"]], "register_ledger_tx_notification_callback() (pycfhelpers.node.net.cfledger method)": [[4, "pycfhelpers.node.net.CFLedger.register_ledger_tx_notification_callback"]], "register_mempool_notification_callback() (pycfhelpers.node.net.cfchain method)": [[4, "pycfhelpers.node.net.CFChain.register_mempool_notification_callback"]], "reinvest_percent (pycfhelpers.node.items.cftxoutcondsubtypesrvstakelock attribute)": [[4, "pycfhelpers.node.items.CFTxOutCondSubtypeSrvStakeLock.reinvest_percent"]], "remove() (pycfhelpers.node.net.cfmempool method)": [[4, "pycfhelpers.node.net.CFMempool.remove"]], "reply() (pycfhelpers.node.cli.replyobject method)": [[4, "pycfhelpers.node.cli.ReplyObject.reply"]], "reply_id (pycfhelpers.node.cli.replyobject attribute)": [[4, "pycfhelpers.node.cli.ReplyObject.reply_id"]], "round_id (pycfhelpers.node.consensus.cfevent attribute)": [[4, "pycfhelpers.node.consensus.CFEvent.round_id"]], "serialize() (pycfhelpers.node.crypto.cfsign method)": [[4, "pycfhelpers.node.crypto.CFSign.serialize"]], "serialize() (pycfhelpers.node.datums.cfdatum method)": [[4, "pycfhelpers.node.datums.CFDatum.serialize"]], "serialize() (pycfhelpers.node.gdb.serializableobject method)": [[4, "pycfhelpers.node.gdb.SerializableObject.serialize"]], "set() (pycfhelpers.node.gdb.gdbgroup method)": [[4, "pycfhelpers.node.gdb.GDBGroup.set"]], "set() (pycfhelpers.node.gdb.gdbgroupbase method)": [[4, "pycfhelpers.node.gdb.GDBGroupBase.set"]], "set() (pycfhelpers.node.gdb.gdbgroupsign method)": [[4, "pycfhelpers.node.gdb.GDBGroupSign.set"]], "sign (pycfhelpers.node.items.cftxsig attribute)": [[4, "pycfhelpers.node.items.CFTxSig.sign"]], "signs (pycfhelpers.node.consensus.cfblock attribute)": [[4, "pycfhelpers.node.consensus.CFBlock.signs"]], "signs (pycfhelpers.node.datums.cfdatumanchor attribute)": [[4, "pycfhelpers.node.datums.CFDatumAnchor.signs"]], "signs (pycfhelpers.node.datums.cfdatumdecree attribute)": [[4, "pycfhelpers.node.datums.CFDatumDecree.signs"]], "signs (pycfhelpers.node.datums.cfdatumemission property)": [[4, "pycfhelpers.node.datums.CFDatumEmission.signs"]], "signs (pycfhelpers.node.datums.cfdatumtoken attribute)": [[4, "pycfhelpers.node.datums.CFDatumToken.signs"]], "size (pycfhelpers.node.crypto.cfpkey attribute)": [[4, "pycfhelpers.node.crypto.CFPkey.size"]], "size (pycfhelpers.node.crypto.cfsign attribute)": [[4, "pycfhelpers.node.crypto.CFSign.size"]], "size (pycfhelpers.node.datums.cfdatum attribute)": [[4, "pycfhelpers.node.datums.CFDatum.size"]], "size (pycfhelpers.node.items.cftxsig attribute)": [[4, "pycfhelpers.node.items.CFTxSig.size"]], "subtype (pycfhelpers.node.datums.cfdatumdecree attribute)": [[4, "pycfhelpers.node.datums.CFDatumDecree.subtype"]], "subtype (pycfhelpers.node.items.cftxoutcond attribute)": [[4, "pycfhelpers.node.items.CFTxOutCond.subtype"]], "ticker (pycfhelpers.node.datums.cfdatumemission attribute)": [[4, "pycfhelpers.node.datums.CFDatumEmission.ticker"]], "ticker (pycfhelpers.node.datums.cfdatumtx attribute)": [[4, "pycfhelpers.node.datums.CFDatumTX.ticker"]], "ticker (pycfhelpers.node.datums.cfdatumtoken attribute)": [[4, "pycfhelpers.node.datums.CFDatumToken.ticker"]], "ticker (pycfhelpers.node.items.cftxoutext attribute)": [[4, "pycfhelpers.node.items.CFTxOutExt.ticker"]], "ticker (pycfhelpers.node.items.cftxtoken attribute)": [[4, "pycfhelpers.node.items.CFTxToken.ticker"]], "token_auth_signs_pkey_hashes() (pycfhelpers.node.net.cfledger method)": [[4, "pycfhelpers.node.net.CFLedger.token_auth_signs_pkey_hashes"]], "token_auth_signs_total() (pycfhelpers.node.net.cfledger method)": [[4, "pycfhelpers.node.net.CFLedger.token_auth_signs_total"]], "token_auth_signs_valid() (pycfhelpers.node.net.cfledger method)": [[4, "pycfhelpers.node.net.CFLedger.token_auth_signs_valid"]], "tsd (pycfhelpers.node.datums.cfdatumemission attribute)": [[4, "pycfhelpers.node.datums.CFDatumEmission.tsd"]], "tx_by_hash() (pycfhelpers.node.net.cfledger method)": [[4, "pycfhelpers.node.net.CFLedger.tx_by_hash"]], "tx_fee (pycfhelpers.node.net.netfee attribute)": [[4, "pycfhelpers.node.net.NetFee.tx_fee"]], "tx_fee_addr (pycfhelpers.node.net.netfee attribute)": [[4, "pycfhelpers.node.net.NetFee.tx_fee_addr"]], "type (pycfhelpers.node.crypto.cfpkey attribute)": [[4, "pycfhelpers.node.crypto.CFPkey.type"]], "type (pycfhelpers.node.crypto.cfsign attribute)": [[4, "pycfhelpers.node.crypto.CFSign.type"]], "type (pycfhelpers.node.datums.cfdatum attribute)": [[4, "pycfhelpers.node.datums.CFDatum.type"]], "type (pycfhelpers.node.datums.cfdatumcustom attribute)": [[4, "pycfhelpers.node.datums.CFDatumCustom.type"]], "type (pycfhelpers.node.datums.cfdatumdecree attribute)": [[4, "pycfhelpers.node.datums.CFDatumDecree.type"]], "type (pycfhelpers.node.datums.cfdatumemission attribute)": [[4, "pycfhelpers.node.datums.CFDatumEmission.type"]], "type (pycfhelpers.node.datums.cfdatumtoken attribute)": [[4, "pycfhelpers.node.datums.CFDatumToken.type"]], "type (pycfhelpers.node.datums.cfsubdatum attribute)": [[4, "pycfhelpers.node.datums.CFSubDatum.type"]], "type (pycfhelpers.node.items.cfitem attribute)": [[4, "pycfhelpers.node.items.CFItem.type"]], "type (pycfhelpers.node.net.cfchain attribute)": [[4, "pycfhelpers.node.net.CFChain.type"]], "unlock (pycfhelpers.node.items.cftxoutcondsubtypesrvstakelock attribute)": [[4, "pycfhelpers.node.items.CFTxOutCondSubtypeSrvStakeLock.unlock"]], "valid_sign_hashes (pycfhelpers.node.datums.cfdatumemission property)": [[4, "pycfhelpers.node.datums.CFDatumEmission.valid_sign_hashes"]], "valid_signs_table() (pycfhelpers.node.net.cfmempool method)": [[4, "pycfhelpers.node.net.CFMempool.valid_signs_table"]], "validator_avg_fee (pycfhelpers.node.net.netfee attribute)": [[4, "pycfhelpers.node.net.NetFee.validator_avg_fee"]], "validator_max_fee (pycfhelpers.node.net.netfee attribute)": [[4, "pycfhelpers.node.net.NetFee.validator_max_fee"]], "validator_min_fee (pycfhelpers.node.net.netfee attribute)": [[4, "pycfhelpers.node.net.NetFee.validator_min_fee"]], "value (pycfhelpers.node.datums.cfdatumemission attribute)": [[4, "pycfhelpers.node.datums.CFDatumEmission.value"]], "value (pycfhelpers.node.items.cftxout attribute)": [[4, "pycfhelpers.node.items.CFTxOut.value"]], "value (pycfhelpers.node.items.cftxoutcond attribute)": [[4, "pycfhelpers.node.items.CFTxOutCond.value"]], "value (pycfhelpers.node.items.cftxoutcondsubtypesrvstakelock attribute)": [[4, "pycfhelpers.node.items.CFTxOutCondSubtypeSrvStakeLock.value"]], "value (pycfhelpers.node.items.cftxoutext attribute)": [[4, "pycfhelpers.node.items.CFTxOutExt.value"]], "version (pycfhelpers.node.consensus.cfblock attribute)": [[4, "pycfhelpers.node.consensus.CFBlock.version"]], "version (pycfhelpers.node.consensus.cfevent attribute)": [[4, "pycfhelpers.node.consensus.CFEvent.version"]], "version (pycfhelpers.node.datums.cfdatum attribute)": [[4, "pycfhelpers.node.datums.CFDatum.version"]], "version (pycfhelpers.node.datums.cfdatumemission attribute)": [[4, "pycfhelpers.node.datums.CFDatumEmission.version"]], "warning() (pycfhelpers.node.logging.cflog method)": [[4, "pycfhelpers.node.logging.CFLog.warning"]], "zerochain (pycfhelpers.node.net.cfnet attribute)": [[4, "pycfhelpers.node.net.CFNet.zerochain"]], "cfsimplehttprequest (class in pycfhelpers.node.http.simple)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequest"]], "cfsimplehttprequesthandler (class in pycfhelpers.node.http.simple)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequestHandler"]], "cfsimplehttpserver (class in pycfhelpers.node.http.simple)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPServer"]], "__call__() (pycfhelpers.node.http.simple.cfsimplehttprequesthandler method)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequestHandler.__call__"]], "body (pycfhelpers.node.http.simple.cfsimplehttprequest property)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequest.body"]], "client_address (pycfhelpers.node.http.simple.cfsimplehttprequest property)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequest.client_address"]], "handler (pycfhelpers.node.http.simple.cfsimplehttprequesthandler attribute)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequestHandler.handler"]], "handler() (pycfhelpers.node.http.simple.cfsimplehttpserver static method)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPServer.handler"]], "http (pycfhelpers.node.http.simple.cfsimplehttprequest attribute)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequest.http"]], "method (pycfhelpers.node.http.simple.cfsimplehttprequest property)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequest.method"]], "methods (pycfhelpers.node.http.simple.cfsimplehttprequesthandler attribute)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequestHandler.methods"]], "pycfhelpers.node.http": [[5, "module-pycfhelpers.node.http"]], "pycfhelpers.node.http.simple": [[5, "module-pycfhelpers.node.http.simple"]], "query (pycfhelpers.node.http.simple.cfsimplehttprequest property)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequest.query"]], "register_uri_handler() (pycfhelpers.node.http.simple.cfsimplehttpserver method)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPServer.register_uri_handler"]], "url (pycfhelpers.node.http.simple.cfsimplehttprequest property)": [[5, "pycfhelpers.node.http.simple.CFSimpleHTTPRequest.url"]]}})