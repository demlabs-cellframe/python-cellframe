from typing import NewType
from enum import Enum

from CellFrame.common import TxTSD
# Import transaction types from legacy
from CellFrame.legacy.pycfhelpers import TxIn, TxInCond, TxOut, TxOutCond, TxPkey, TxSig, TxToken, TxReceipt, TxOutExt, TxOutCondSubtypeSrvStakeLock, TxOutStd


OriginItemTypes = TxIn | TxInCond | TxOut | TxOutCond | TxPkey | TxSig | TxToken | TxReceipt | TxOutExt | TxTSD | TxOutCondSubtypeSrvStakeLock | TxOutStd
ledger_cache_rc = NewType("ledger_cache_rc", str)
datum_hash = NewType("datum_hash", str)


class CFLedgerCacheResponse(int, Enum):
    """Enumeration ledger cache responses."""
    DAP_LEDGER_CHECK_OK = 0
    DAP_LEDGER_CHECK_INVALID_ARGS = 1
    DAP_LEDGER_CHECK_INVALID_SIZE = 2
    DAP_LEDGER_CHECK_ALREADY_CACHED = 3
    DAP_LEDGER_CHECK_PARSE_ERROR  = 4
    DAP_LEDGER_CHECK_APPLY_ERROR = 5
    DAP_LEDGER_CHECK_NOT_ENOUGH_MEMORY = 6
    DAP_LEDGER_CHECK_INTEGER_OVERFLOW=7
    DAP_LEDGER_CHECK_NOT_ENOUGH_VALID_SIGNS=8
    DAP_LEDGER_CHECK_TICKER_NOT_FOUND=9
    DAP_LEDGER_CHECK_ZERO_VALUE=10
    DAP_LEDGER_CHECK_ADDR_FORBIDDEN=11
    DAP_LEDGER_CHECK_WHITELISTED=12
    #/* TX check return codes */
    DAP_LEDGER_TX_CHECK_IN_EMS_ALREADY_USED=13
    DAP_LEDGER_TX_CHECK_STAKE_LOCK_IN_EMS_ALREADY_USED=14
    DAP_LEDGER_TX_CHECK_EMISSION_NOT_FOUND=15
    DAP_LEDGER_TX_CHECK_TX_NO_VALID_INPUTS=16
    DAP_LEDGER_TX_CHECK_STAKE_LOCK_INVALID_TOKEN=17
    DAP_LEDGER_TX_CHECK_STAKE_LOCK_NO_OUT_COND_FOR_IN_EMS=18
    DAP_LEDGER_TX_CHECK_NO_OUT_EXT_FOR_GIRDLED_IN_EMS=19
    DAP_LEDGER_TX_CHECK_NO_OUT_ITEMS_FOR_BASE_TX=20
    DAP_LEDGER_TX_CHECK_STAKE_LOCK_UNEXPECTED_VALUE=21
    DAP_LEDGER_TX_CHECK_STAKE_LOCK_OTHER_TICKER_EXPECTED=22
    DAP_LEDGER_TX_CHECK_OUT_ITEM_ALREADY_USED=23
    DAP_LEDGER_TX_CHECK_PREV_TX_NOT_FOUND=24
    DAP_LEDGER_TX_CHECK_PREV_OUT_ITEM_NOT_FOUND=25
    DAP_LEDGER_TX_CHECK_PREV_OUT_ITEM_MISSTYPED=26
    DAP_LEDGER_TX_CHECK_PKEY_HASHES_DONT_MATCH=27
    DAP_LEDGER_TX_CHECK_PREV_OUT_ALREADY_USED_IN_CURRENT_TX=28
    DAP_LEDGER_TX_CHECK_NO_VERIFICATOR_SET=29
    DAP_LEDGER_TX_CHECK_VERIFICATOR_CHECK_FAILURE=30
    DAP_LEDGER_TX_CHECK_SUM_INS_NOT_EQUAL_SUM_OUTS=31
    DAP_LEDGER_TX_CHECK_REWARD_ITEM_ALREADY_USED=32
    DAP_LEDGER_TX_CHECK_REWARD_ITEM_ILLEGAL=33
    DAP_LEDGER_TX_CHECK_NO_MAIN_TICKER=34
    DAP_LEDGER_TX_CHECK_UNEXPECTED_TOKENIZED_OUT=35
    DAP_LEDGER_TX_CHECK_NOT_ENOUGH_FEE=36
    DAP_LEDGER_TX_CHECK_NOT_ENOUGH_TAX=37
    #/* Emisssion check return codes */
    DAP_LEDGER_EMISSION_CHECK_VALUE_EXCEEDS_CURRENT_SUPPLY=38
    DAP_LEDGER_EMISSION_CHECK_LEGACY_FORBIDDEN=39
    #/* Token declaration/update return codes */
    DAP_LEDGER_TOKEN_ADD_CHECK_NOT_ENOUGH_UNIQUE_SIGNS=40
    DAP_LEDGER_TOKEN_ADD_CHECK_LEGACY_FORBIDDEN=41
    DAP_LEDGER_TOKEN_ADD_CHECK_TSD_INVALID_SUPPLY=42
    DAP_LEDGER_TOKEN_ADD_CHECK_TSD_INVALID_ADDR=43
    DAP_LEDGER_TOKEN_ADD_CHECK_TSD_ADDR_MISMATCH=44
    DAP_LEDGER_TOKEN_ADD_CHECK_TSD_PKEY_MISMATCH=45
    DAP_LEDGER_TOKEN_ADD_CHECK_TSD_FORBIDDEN=46
    DAP_LEDGER_TOKEN_ADD_CHECK_TSD_OTHER_TICKER_EXPECTED=47


class CFNetState(str, Enum):
    """Enumeration of network states."""

    NET_STATE_OFFLINE = "NET_STATE_OFFLINE"
    NET_STATE_ONLINE = "NET_STATE_ONLINE"


class TSD(int, Enum):
    """Enumeration of the typed section data."""
    TYPE_UNKNOWN = 0x0000
    TYPE_TIMESTAMP = 0x0001
    TYPE_ADDRESS = 0x0002
    TYPE_VALUE = 0x0003
    TYPE_CONTRACT = 0x0004  # contract_address: ChecksumAddress
    TYPE_NET_ID = 0x0005
    TYPE_BLOCK_NUM = 0x0006
    TYPE_TOKEN_SYM = 0x0007
    TYPE_OUTER_TX_HASH = 0x0008
    TYPE_SOURCE = 0x0009
    TYPE_SOURCE_SUBTYPE = 0x000A
    TYPE_DATA = 0x000B
    TYPE_SENDER = 0x000C
    TYPE_TOKEN_ADDRESS = 0x000D
    TYPE_SIGNATURS = 0x000E
    TYPE_UNIQUE_ID = 0x000F
    TYPE_BASE_TX_HASH = 0x0010
    TYPE_EMISSION_CENTER_UID = 0x0011
    TYPE_EMISSION_CENTER_VER = 0x0012
    TYPE_HEAD_EVENT = 0x0013
    TYPE_PREV_EVENT = 0x0014


class TYPE_SOURCE(str, Enum):
    """
    Enumeration of source types.
    """
    BRIDGE = "BRIDGE"


class TYPE_SOURCE_SUBTYPE(str, Enum):
    """
    Enumeration of sourse subtypes.
    """
    TO_WALLET = "TO_WALLET"
    COMMISSION = "COMMISSION"


class CFSignType(int, Enum):
    """Sign type constants for CellFrame wallets"""
    NULL = 0x0000
    BLISS = 0x0001
    TESLA = 0x0003
    PICNIC = 0x0101
    DILITHIUM = 0x0102
    FALCON = 0x0103
    SPHINCSPLUS = 0x0104
    ECDSA = 0x0105
    SHIPOVNIK = 0x0106
    PQLR_DILITHIUM = 0x1102
    PQLR_FALCON = 0x1103
    PQLR_SPHINCS = 0x1104
    MULTI_CHAINED = 0x0f00
    MULTI_COMBINED = 0x0f01
